{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\VSCodeProjects\\\\ARM\\\\Views\\\\ARMEvents.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport Moment from \"moment\";\nimport \"moment/min/locales\";\nimport { vh } from \"react-native-viewport-units-fix\";\nimport { getToken, getRoleToken, setEventToken } from \"../API/token\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar serwerAdress = \"https://arm-dev.herokuapp.com\";\nexport function ARMEvents(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Events = _useState2[0],\n      setEvents = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loggedUser = _useState4[0],\n      setLoggedUser = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userRole = _useState6[0],\n      setUserRole = _useState6[1];\n\n  var GetEvents = function GetEvents() {\n    fetch(serwerAdress + \"/events\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setEvents(json);\n    });\n  };\n\n  var GetLoggedUser = function GetLoggedUser() {\n    getToken().then(function (res) {\n      return setLoggedUser(res);\n    });\n  };\n\n  var GetUserRole = function GetUserRole() {\n    getRoleToken().then(function (res) {\n      return setUserRole(res);\n    });\n  };\n\n  var GetEventDetails = function GetEventDetails(Id) {\n    setEventToken(Id);\n    navigation.navigate(\"Informacje o Wydarzeniu\", {\n      name: \"Informacja o Wydarzeniu\"\n    });\n  };\n\n  useFocusEffect(React.useCallback(function () {\n    GetLoggedUser();\n    GetEvents();\n    Moment.locale(\"pl\");\n    GetUserRole();\n  }, []));\n  return React.createElement(SafeAreaView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.loggedUserStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Zalogowany jako, \", loggedUser ? loggedUser : null), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Lista wydarze\\u0144\"), React.createElement(View, {\n    style: styles.eventsList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, Events.length != 0 ? React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    showsHorizontalScrollIndicator: false,\n    data: Events,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.marginTop15,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.events,\n        onPress: function onPress() {\n          return GetEventDetails(item.Id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, item.Name, \"\\n\", Moment(item.DateFrom).format(\"DD-MM-yyyy HH:mm\"), \"\\n\", item.DateTo == null || item.DateTo == \"\" ? \"-\" : Moment(item.DateTo).format(\"DD-MM-yyyy HH:mm\"))));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }) : React.createElement(Text, {\n    style: styles.events,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Brak wydarze\\u0144\")), React.createElement(View, {\n    style: styles.refreshbutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: GetEvents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Od\\u015Bwie\\u017C list\\u0119 wydarze\\u0144\")), userRole == \"Admin\" || userRole == \"Koordynator\" ? React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"Dodaj wydarzenie\", {\n        name: \"Dodaj wydarzenie\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Dodaj wydarzenie\")) : null, React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"ARM\", {\n        name: \"ARM\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Powr\\xF3t do listy u\\u017Cytkownik\\xF3w\")))));\n}\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\"\n  },\n  container: {\n    height: 70 * vh\n  },\n  title: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    fontSize: 2.5 * vh,\n    fontWeight: \"bold\",\n    marginBottom: \"5%\",\n    marginTop: \"5%\"\n  },\n  users: {\n    alignItems: \"center\",\n    fontSize: 2.3 * vh,\n    marginTop: 20\n  },\n  eventsList: {\n    height: 40 * vh,\n    alignItems: \"center\"\n  },\n  events: {\n    justifyContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    fontSize: 2 * vh,\n    marginTop: 5\n  },\n  refreshbutton: {\n    marginTop: \"5%\",\n    borderRadius: 5\n  },\n  loggedUserStyle: {\n    position: \"absolute\",\n    top: 20,\n    left: 0,\n    fontSize: 1.5 * vh\n  },\n  marginTop15: {\n    marginTop: 15\n  }\n});\nvar navigationStyle = StyleSheet.create({\n  navigationButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 1 * vh,\n    backgroundColor: \"#0064C8\",\n    marginTop: 10,\n    borderRadius: 5\n  },\n  navigationButtonText: {\n    alignItems: \"center\",\n    fontSize: 2 * vh,\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["F:/VSCodeProjects/ARM/Views/ARMEvents.js"],"names":["React","useEffect","useState","useFocusEffect","Moment","vh","getToken","getRoleToken","setEventToken","serwerAdress","ARMEvents","navigation","Events","setEvents","loggedUser","setLoggedUser","userRole","setUserRole","GetEvents","fetch","then","response","json","GetLoggedUser","res","GetUserRole","GetEventDetails","Id","navigate","name","useCallback","locale","styles","body","loggedUserStyle","container","title","eventsList","length","item","marginTop15","events","Name","DateFrom","format","DateTo","index","toString","refreshbutton","navigationStyle","navigationButton","navigationButtonText","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","backgroundColor","height","marginLeft","marginRight","fontSize","fontWeight","marginBottom","marginTop","users","borderRadius","position","top","left","padding","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport Moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport { vh } from \"react-native-viewport-units-fix\";\r\nimport { getToken, getRoleToken, setEventToken } from \"../API/token\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nconst serwerAdress = \"https://arm-dev.herokuapp.com\"; // API\r\n\r\nexport function ARMEvents({ navigation }) {\r\n  const [Events, setEvents] = useState([]); // lista wydarzeń\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  const GetEvents = () => {\r\n    fetch(serwerAdress + \"/events\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setEvents(json);\r\n      });\r\n  };\r\n\r\n  const GetLoggedUser = () => {\r\n    getToken().then((res) => setLoggedUser(res));\r\n  };\r\n\r\n  const GetUserRole = () => {\r\n    getRoleToken().then((res) => setUserRole(res));\r\n  };\r\n\r\n  const GetEventDetails = (Id) => {\r\n    setEventToken(Id);\r\n    navigation.navigate(\"Informacje o Wydarzeniu\", {\r\n      name: \"Informacja o Wydarzeniu\",\r\n    });\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      GetLoggedUser();\r\n      GetEvents();\r\n      Moment.locale(\"pl\");\r\n      GetUserRole();\r\n    }, [])\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={styles.body}>\r\n      <Text style={styles.loggedUserStyle}>\r\n        Zalogowany jako, {loggedUser ? loggedUser : null}\r\n      </Text>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Lista wydarzeń</Text>\r\n        <View style={styles.eventsList}>\r\n          {Events.length != 0 ? (\r\n            <FlatList\r\n              showsVerticalScrollIndicator={false}\r\n              showsHorizontalScrollIndicator={false}\r\n              data={Events}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.marginTop15}>\r\n                  <TouchableOpacity>\r\n                    <Text\r\n                      style={styles.events}\r\n                      onPress={() => GetEventDetails(item.Id)}\r\n                    >\r\n                      {item.Name}\r\n                      {\"\\n\"}\r\n                      {Moment(item.DateFrom).format(\"DD-MM-yyyy HH:mm\")}\r\n                      {\"\\n\"}\r\n                      {item.DateTo == null || item.DateTo == \"\"\r\n                        ? \"-\"\r\n                        : Moment(item.DateTo).format(\"DD-MM-yyyy HH:mm\")}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n              keyExtractor={(item, index) => index.toString()}\r\n            />\r\n          ) : (\r\n            <Text style={styles.events}>Brak wydarzeń</Text>\r\n          )}\r\n        </View>\r\n        <View style={styles.refreshbutton}>\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={GetEvents}\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>\r\n              Odśwież listę wydarzeń\r\n            </Text>\r\n          </TouchableOpacity>\r\n          {userRole == \"Admin\" || userRole == \"Koordynator\" ? (\r\n            <TouchableOpacity\r\n              style={navigationStyle.navigationButton}\r\n              onPress={() =>\r\n                navigation.navigate(\"Dodaj wydarzenie\", {\r\n                  name: \"Dodaj wydarzenie\",\r\n                })\r\n              }\r\n            >\r\n              <Text style={navigationStyle.navigationButtonText}>\r\n                Dodaj wydarzenie\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={() => navigation.navigate(\"ARM\", { name: \"ARM\" })}\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>\r\n              Powrót do listy użytkowników\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"dodgerblue\",\r\n  },\r\n  container: {\r\n    height: 70 * vh,\r\n  },\r\n  title: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    fontSize: 2.5 * vh,\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"5%\",\r\n    marginTop: \"5%\",\r\n  },\r\n  users: {\r\n    alignItems: \"center\",\r\n    fontSize: 2.3 * vh,\r\n    marginTop: 20,\r\n  },\r\n  eventsList: {\r\n    height: 40 * vh,\r\n    alignItems: \"center\",\r\n  },\r\n  events: {\r\n    justifyContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    fontSize: 2 * vh,\r\n    marginTop: 5,\r\n  },\r\n  refreshbutton: {\r\n    marginTop: \"5%\",\r\n    borderRadius: 5,\r\n  },\r\n  loggedUserStyle: {\r\n    position: \"absolute\",\r\n    top: 20,\r\n    left: 0,\r\n    fontSize: 1.5 * vh,\r\n  },\r\n  marginTop15: {\r\n    marginTop: 15,\r\n  },\r\n});\r\n\r\nconst navigationStyle = StyleSheet.create({\r\n  navigationButton: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 1 * vh,\r\n    backgroundColor: \"#0064C8\",\r\n    marginTop: 10,\r\n    borderRadius: 5,\r\n  },\r\n  navigationButtonText: {\r\n    alignItems: \"center\",\r\n    fontSize: 2 * vh,\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}