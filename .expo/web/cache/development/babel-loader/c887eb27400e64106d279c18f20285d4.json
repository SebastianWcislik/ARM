{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\VSCode Projects\\\\DoneWithIt\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { render } from \"react-dom\";\nimport { login } from \"./API/mock\";\nimport { setToken } from \"./API/token\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nexport default function App() {\n  var _this = this;\n\n  var serwerAdress = \"http://192.168.0.27:3000\";\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errMessage = _useState4[0],\n      setErrMessage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allUsers = _useState6[0],\n      setAllUsers = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Users = _useState8[0],\n      setUsers = _useState8[1];\n\n  var Stack = createStackNavigator();\n\n  var ARMLogin = function ARMLogin(_ref) {\n    var navigation = _ref.navigation,\n        route = _ref.route;\n\n    var loginUser = function loginUser() {\n      setErrMessage(\"\");\n      login(text, text.password, true).then(function _callee(res) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(setToken(res.auth_token));\n\n              case 2:\n                navigation.navigate(\"ARM\", {\n                  name: \"ARM\"\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }).catch(function (err) {\n        return setErrMessage(err.message);\n      });\n    };\n\n    return React.createElement(SafeAreaView, {\n      style: styles.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Ekran logowania\"), React.createElement(TextInput, {\n      style: styles.TextInputStyle,\n      placeholder: \"Nazwa u\\u017Cytkownika\",\n      onChangeText: function onChangeText(text) {\n        return setText(text);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      style: styles.TextInputStyle,\n      placeholder: \"Has\\u0142o\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: navigationStyle.navigationButton,\n      onPress: loginUser,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: navigationStyle.navigationButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Zaloguj\")), errMessage ? React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, errMessage) : null));\n  };\n\n  var ARMUsersList = function ARMUsersList(_ref2) {\n    var navigation = _ref2.navigation;\n    return React.createElement(SafeAreaView, {\n      style: styles.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Aplikacja Ratownik\\xF3w Mazowsza\"), React.createElement(View, {\n      style: styles.usersList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, React.createElement(FlatList, {\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      data: Users,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }\n        }, item.State == 1 ? React.createElement(Text, {\n          style: styles.users,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }\n        }, item.Name, \" -\", \" \", React.createElement(Text, {\n          style: states.unavailable,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 23\n          }\n        }, \"Niedost\\u0119pny\")) : item.State == 2 ? React.createElement(Text, {\n          style: styles.users,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, item.Name, \" - \", \"\", React.createElement(Text, {\n          style: states.available,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }\n        }, \"Dost\\u0119pny\")) : item.State == 3 ? React.createElement(Text, {\n          style: styles.users,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }, item.Name, \" - \", \"\", React.createElement(Text, {\n          style: states.busy,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }\n        }, \"Na akcji\")) : React.createElement(Text, {\n          style: styles.users,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, \"B\\u0142\\u0105d wczytywania u\\u017Cytkownik\\xF3w\"));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      style: styles.refreshbutton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: navigationStyle.navigationButton,\n      onPress: GetList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: navigationStyle.navigationButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, \"Wy\\u015Bwietl/Od\\u015Bwie\\u017C list\\u0119\")), React.createElement(TouchableOpacity, {\n      style: navigationStyle.navigationButton,\n      onPress: function onPress() {\n        return navigation.navigate(\"Mój profil\", {\n          name: \"Mój profil\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: navigationStyle.navigationButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"M\\xF3j profil\")), React.createElement(TouchableOpacity, {\n      style: navigationStyle.navigationButton,\n      onPress: function onPress() {\n        return navigation.navigate(\"Logowanie\", {\n          name: \"Logowanie\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: navigationStyle.navigationButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Wyloguj\")))));\n  };\n\n  var ARMMyProfile = function ARMMyProfile(_ref4) {\n    var navigation = _ref4.navigation,\n        route = _ref4.route;\n    return React.createElement(SafeAreaView, {\n      style: styles.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"M\\xF3j profil\"), React.createElement(TouchableOpacity, {\n      style: navigationStyle.navigationButton,\n      onPress: function onPress() {\n        return navigation.navigate(\"ARM\", {\n          name: \"ARM\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: navigationStyle.navigationButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Powr\\xF3t do listy\"))));\n  };\n\n  var GetList = function GetList() {\n    fetch(serwerAdress + \"/users\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setUsers(json);\n    });\n  };\n\n  return React.createElement(NavigationContainer, {\n    style: navigationStyle.navigationMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Logowanie\",\n    component: ARMLogin,\n    options: ({\n      title: \"Logowanie\"\n    }, {\n      headerShown: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ARM\",\n    component: ARMUsersList,\n    options: ({\n      title: \"ARM\"\n    }, {\n      headerShown: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"M\\xF3j profil\",\n    component: ARMMyProfile,\n    options: ({\n      title: \"Mój profil\"\n    }, {\n      headerShown: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\"\n  },\n  container: {\n    height: \"80%\"\n  },\n  title: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: \"5%\",\n    marginTop: \"5%\"\n  },\n  usersList: {\n    marginTop: \"5%\",\n    marginBottom: 5,\n    height: \"68.9%\",\n    alignItems: \"center\"\n  },\n  users: {\n    alignItems: \"center\",\n    fontSize: 18,\n    marginTop: 20\n  },\n  refreshbutton: {\n    marginTop: \"5%\"\n  },\n  button: {\n    alignItems: \"center\",\n    fontSize: 15,\n    backgroundColor: \"lightblue\",\n    padding: 10\n  },\n  TextInputStyle: {\n    height: \"10%\",\n    width: \"100%\",\n    margin: 5,\n    marginBottom: 15\n  }\n});\nvar states = StyleSheet.create({\n  available: {\n    color: \"darkgreen\"\n  },\n  unavailable: {\n    color: \"darkred\"\n  },\n  busy: {\n    color: \"orange\"\n  }\n});\nvar navigationStyle = StyleSheet.create({\n  navigationMenu: {\n    display: \"none\",\n    alignContent: \"flex-end\",\n    justifyContent: \"center\"\n  },\n  navigationButton: {\n    alignItems: \"center\",\n    padding: 10,\n    backgroundColor: \"#0064C8\"\n  },\n  navigationButtonText: {\n    alignItems: \"center\",\n    fontSize: 15,\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["F:/VSCode Projects/DoneWithIt/App.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","render","login","setToken","App","serwerAdress","username","password","text","setText","errMessage","setErrMessage","allUsers","setAllUsers","Users","setUsers","Stack","ARMLogin","navigation","route","loginUser","then","res","auth_token","navigate","name","catch","err","message","styles","body","title","TextInputStyle","navigationStyle","navigationButton","navigationButtonText","ARMUsersList","container","usersList","item","State","users","Name","states","unavailable","available","busy","refreshbutton","GetList","ARMMyProfile","fetch","response","json","navigationMenu","headerShown","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","backgroundColor","height","marginLeft","marginRight","fontSize","fontWeight","marginBottom","marginTop","button","padding","width","margin","color","display","alignContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { render } from \"react-dom\";\nimport { login } from \"./API/mock\";\nimport { setToken } from \"./API/token\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  FlatList,\n  TouchableOpacity,\n  TextInput,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\n\n// APP\n\nexport default function App() {\n  // Deklaracja zmiennych\n\n  const serwerAdress = \"http://192.168.0.27:3000\"; // baza danych\n  const [text, setText] = useState({ username: \"\", password: \"\" });\n  const [errMessage, setErrMessage] = useState(\"\"); // odpowiedź z API\n  const [allUsers, setAllUsers] = useState([]); // lista zarejestrowanych użytkowników\n  const [Users, setUsers] = useState([]); // lista użytkowników\n  const Stack = createStackNavigator(); // menu nawigacyjne\n\n  // Widok logowania\n\n  const ARMLogin = ({ navigation, route }) => {\n    const loginUser = () => {\n      setErrMessage(\"\");\n      login(text, text.password, true)\n        .then(async (res) => {\n          await setToken(res.auth_token);\n          navigation.navigate(\"ARM\", { name: \"ARM\" });\n        })\n        .catch((err) => setErrMessage(err.message));\n    };\n\n    return (\n      <SafeAreaView style={styles.body}>\n        <View>\n          <Text style={styles.title}>Ekran logowania</Text>\n          <TextInput\n            style={styles.TextInputStyle}\n            placeholder=\"Nazwa użytkownika\"\n            onChangeText={(text) => setText(text)}\n          />\n          <TextInput style={styles.TextInputStyle} placeholder=\"Hasło\" />\n          <TouchableOpacity\n            style={navigationStyle.navigationButton}\n            onPress={loginUser}\n          >\n            <Text style={navigationStyle.navigationButtonText}>Zaloguj</Text>\n          </TouchableOpacity>\n          {errMessage ? <Text>{errMessage}</Text> : null}\n        </View>\n      </SafeAreaView>\n    );\n  };\n\n  // Widok listy użytkowników\n\n  const ARMUsersList = ({ navigation }) => {\n    return (\n      <SafeAreaView style={styles.body}>\n        <View style={styles.container}>\n          <Text style={styles.title}>Aplikacja Ratowników Mazowsza</Text>\n          <View style={styles.usersList}>\n            <FlatList\n              showsVerticalScrollIndicator={false}\n              showsHorizontalScrollIndicator={false}\n              data={Users}\n              renderItem={({ item }) => (\n                <View>\n                  {item.State == 1 ? (\n                    <Text style={styles.users}>\n                      {item.Name} -{\" \"}\n                      <Text style={states.unavailable}>Niedostępny</Text>\n                    </Text>\n                  ) : item.State == 2 ? (\n                    <Text style={styles.users}>\n                      {item.Name} - {\"\"}\n                      <Text style={states.available}>Dostępny</Text>\n                    </Text>\n                  ) : item.State == 3 ? (\n                    <Text style={styles.users}>\n                      {item.Name} - {\"\"}\n                      <Text style={states.busy}>Na akcji</Text>\n                    </Text>\n                  ) : (\n                    <Text style={styles.users}>\n                      Błąd wczytywania użytkowników\n                    </Text>\n                  )}\n                </View>\n              )}\n            />\n          </View>\n          <View style={styles.refreshbutton}>\n            <TouchableOpacity\n              style={navigationStyle.navigationButton}\n              onPress={GetList}\n            >\n              <Text style={navigationStyle.navigationButtonText}>\n                Wyświetl/Odśwież listę\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={navigationStyle.navigationButton}\n              onPress={() =>\n                navigation.navigate(\"Mój profil\", { name: \"Mój profil\" })\n              }\n            >\n              <Text style={navigationStyle.navigationButtonText}>\n                Mój profil\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={navigationStyle.navigationButton}\n              onPress={() =>\n                navigation.navigate(\"Logowanie\", { name: \"Logowanie\" })\n              }\n            >\n              <Text style={navigationStyle.navigationButtonText}>Wyloguj</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView>\n    );\n  };\n\n  // Widok profilu\n\n  const ARMMyProfile = ({ navigation, route }) => {\n    return (\n      <SafeAreaView style={styles.body}>\n        <View>\n          <Text style={styles.title}>Mój profil</Text>\n          <TouchableOpacity\n            style={navigationStyle.navigationButton}\n            onPress={() => navigation.navigate(\"ARM\", { name: \"ARM\" })}\n          >\n            <Text style={navigationStyle.navigationButtonText}>\n              Powrót do listy\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </SafeAreaView>\n    );\n  };\n\n  // Metoda wywołująca użytkoników z bazy\n\n  const GetList = () => {\n    fetch(serwerAdress + \"/users\")\n      .then((response) => response.json())\n      .then((json) => {\n        setUsers(json);\n      });\n  };\n\n  // Menu nawigacyjne\n\n  return (\n    <NavigationContainer style={navigationStyle.navigationMenu}>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Logowanie\"\n          component={ARMLogin}\n          options={({ title: \"Logowanie\" }, { headerShown: false })}\n        />\n        <Stack.Screen\n          name=\"ARM\"\n          component={ARMUsersList}\n          options={({ title: \"ARM\" }, { headerShown: false })}\n        />\n        <Stack.Screen\n          name=\"Mój profil\"\n          component={ARMMyProfile}\n          options={({ title: \"Mój profil\" }, { headerShown: false })}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n// Style kaskadowe do listy użytkowników\n\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\",\n  },\n  container: {\n    height: \"80%\",\n  },\n  title: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: \"5%\",\n    marginTop: \"5%\",\n  },\n  usersList: {\n    marginTop: \"5%\",\n    marginBottom: 5,\n    height: \"68.9%\",\n    alignItems: \"center\",\n  },\n  users: {\n    alignItems: \"center\",\n    fontSize: 18,\n    marginTop: 20,\n  },\n  refreshbutton: {\n    marginTop: \"5%\",\n  },\n  button: {\n    alignItems: \"center\",\n    fontSize: 15,\n    backgroundColor: \"lightblue\",\n    padding: 10,\n  },\n  TextInputStyle: {\n    height: \"10%\",\n    width: \"100%\",\n    margin: 5,\n    marginBottom: 15,\n  },\n});\n\nconst states = StyleSheet.create({\n  available: {\n    color: \"darkgreen\",\n  },\n  unavailable: {\n    color: \"darkred\",\n  },\n  busy: {\n    color: \"orange\",\n  },\n});\n\nconst navigationStyle = StyleSheet.create({\n  navigationMenu: {\n    display: \"none\",\n    alignContent: \"flex-end\",\n    justifyContent: \"center\",\n  },\n  navigationButton: {\n    alignItems: \"center\",\n    padding: 10,\n    backgroundColor: \"#0064C8\",\n  },\n  navigationButtonText: {\n    alignItems: \"center\",\n    fontSize: 15,\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}