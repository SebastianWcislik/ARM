{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from \"./createCSSStyleSheet\";\nimport createCompileableStyle from \"./createCompileableStyle\";\nimport createOrderedCSSStyleSheet from \"./createOrderedCSSStyleSheet\";\nimport flattenArray from \"../../modules/flattenArray\";\nimport flattenStyle from \"./flattenStyle\";\nimport I18nManager from \"../I18nManager\";\nimport i18nStyle from \"./i18nStyle\";\nimport { atomic, classic, inline, stringifyValueWithProperty } from \"./compile\";\nimport initialRules from \"./initialRules\";\nimport modality from \"./modality\";\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from \"./constants\";\nvar emptyObject = {};\nexport default function createStyleResolver() {\n  var inserted, sheet, lookup;\n  var resolved = {\n    css: {},\n    ltr: {},\n    rtl: {},\n    rtlNoSwap: {}\n  };\n\n  var init = function init() {\n    inserted = {\n      css: {},\n      ltr: {},\n      rtl: {},\n      rtlNoSwap: {}\n    };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    lookup = {\n      byClassName: {},\n      byProp: {}\n    };\n    modality(function (rule) {\n      return sheet.insert(rule, STYLE_GROUPS.modality);\n    });\n    initialRules.forEach(function (rule) {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToLookup(className, prop, value) {\n    if (!lookup.byProp[prop]) {\n      lookup.byProp[prop] = {};\n    }\n\n    lookup.byProp[prop][value] = className;\n    lookup.byClassName[className] = {\n      prop: prop,\n      value: value\n    };\n  }\n\n  function getClassName(prop, value) {\n    var val = stringifyValueWithProperty(value, prop);\n    var cache = lookup.byProp;\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (!inserted[dir][id]) {\n      var style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      var results = atomic(style);\n      Object.values(results).forEach(function (_ref) {\n        var identifier = _ref.identifier,\n            property = _ref.property,\n            rules = _ref.rules,\n            value = _ref.value;\n        addToLookup(identifier, property, value);\n        rules.forEach(function (rule) {\n          var group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n\n  function resolve(style, classList) {\n    var nextClassList = [];\n    var props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach(function (identifier) {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            var item = resolved.css[identifier];\n            item.rules.forEach(function (rule) {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      _injectRegisteredStyle(style);\n\n      var key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      props = _resolveStyle(style);\n    } else {\n      var flatArray = flattenArray(style);\n      var isArrayOfNumbers = true;\n      var cacheKey = '';\n\n      for (var i = 0; i < flatArray.length; i++) {\n        var id = flatArray[i];\n\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n\n          _injectRegisteredStyle(id);\n        }\n      }\n\n      var _key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n\n      props = _resolveStyle(flatArray, _key);\n    }\n\n    nextClassList.push.apply(nextClassList, _toConsumableArray(props.classList));\n    var finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n\n  function resolveWithNode(rnStyleNext, node) {\n    function getDeclaration(className) {\n      return lookup.byClassName[className] || emptyObject;\n    }\n\n    var _getDOMStyleInfo = getDOMStyleInfo(node),\n        rdomClassList = _getDOMStyleInfo.classList,\n        rdomStyle = _getDOMStyleInfo.style;\n\n    var _rdomClassList$reduce = rdomClassList.reduce(function (styleProps, className) {\n      var _getDeclaration = getDeclaration(className),\n          prop = _getDeclaration.prop,\n          value = _getDeclaration.value;\n\n      if (prop) {\n        styleProps.style[prop] = value;\n      } else {\n        styleProps.classList.push(className);\n      }\n\n      return styleProps;\n    }, {\n      classList: [],\n      style: {}\n    }),\n        rnClassList = _rdomClassList$reduce.classList,\n        rnStyle = _rdomClassList$reduce.style;\n\n    var _resolve = resolve([i18nStyle(rnStyle), rnStyleNext]),\n        rdomClassListNext = _resolve.classList,\n        rdomStyleNext = _resolve.style;\n\n    var className = classListToString(rdomClassListNext.concat(rnClassList));\n\n    var style = _objectSpread({}, rdomStyle);\n\n    rdomClassListNext.forEach(function (className) {\n      var _getDeclaration2 = getDeclaration(className),\n          prop = _getDeclaration2.prop;\n\n      if (style[prop]) {\n        style[prop] = '';\n      }\n    });\n\n    _extends(style, rdomStyleNext);\n\n    return {\n      className: className,\n      style: style\n    };\n  }\n\n  function _resolveStyle(style, key) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    var flatStyle = flattenStyle(style);\n    var localizedStyle = createCompileableStyle(i18nStyle(flatStyle));\n    var props = Object.keys(localizedStyle).sort().reduce(function (props, styleProp) {\n      var value = localizedStyle[styleProp];\n\n      if (value != null) {\n        var className = getClassName(styleProp, value);\n\n        if (className) {\n          props.classList.push(className);\n        } else {\n          if (styleProp === 'pointerEvents' || styleProp === 'placeholderTextColor' || styleProp === 'animationKeyframes') {\n            var a = atomic(_defineProperty({}, styleProp, value));\n            Object.values(a).forEach(function (_ref2) {\n              var identifier = _ref2.identifier,\n                  rules = _ref2.rules;\n              props.classList.push(identifier);\n              rules.forEach(function (rule) {\n                sheet.insert(rule, STYLE_GROUPS.atomic);\n              });\n            });\n          } else {\n            if (!props.style) {\n              props.style = {};\n            }\n\n            props.style[styleProp] = value;\n          }\n        }\n      }\n\n      return props;\n    }, {\n      classList: []\n    });\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet: function getStyleSheet() {\n      var textContent = sheet.getTextContent();\n\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent: textContent\n      };\n    },\n    createCSS: function createCSS(rules, group) {\n      var result = {};\n      Object.keys(rules).forEach(function (name) {\n        var style = rules[name];\n        var compiled = classic(style, name);\n        Object.values(compiled).forEach(function (_ref3) {\n          var identifier = _ref3.identifier,\n              rules = _ref3.rules;\n          resolved.css[identifier] = {\n            group: group || STYLE_GROUPS.classic,\n            rules: rules\n          };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve: resolve,\n    sheet: sheet,\n    resolveWithNode: resolveWithNode\n  };\n}\n\nvar createCacheKey = function createCacheKey(id) {\n  var prefix = 'rn';\n  return prefix + \"-\" + id;\n};\n\nvar classListToString = function classListToString(list) {\n  return list.join(' ').trim();\n};\n\nvar hyphenPattern = /-([a-z])/g;\n\nvar toCamelCase = function toCamelCase(str) {\n  return str.replace(hyphenPattern, function (m) {\n    return m[1].toUpperCase();\n  });\n};\n\nvar getDOMStyleInfo = function getDOMStyleInfo(node) {\n  var nodeStyle = node.style;\n  var classList = Array.prototype.slice.call(node.classList);\n  var style = {};\n\n  for (var i = 0; i < nodeStyle.length; i += 1) {\n    var property = nodeStyle.item(i);\n\n    if (property) {\n      style[toCamelCase(property)] = nodeStyle.getPropertyValue(property);\n    }\n  }\n\n  return {\n    classList: classList,\n    style: style\n  };\n};","map":{"version":3,"sources":["F:/VSCodeProjects/ARM/node_modules/react-native-web/src/exports/StyleSheet/createStyleResolver.js"],"names":["canUseDOM","createCSSStyleSheet","createCompileableStyle","createOrderedCSSStyleSheet","flattenArray","flattenStyle","I18nManager","i18nStyle","atomic","classic","inline","stringifyValueWithProperty","initialRules","modality","STYLE_ELEMENT_ID","STYLE_GROUPS","emptyObject","createStyleResolver","inserted","sheet","lookup","resolved","css","ltr","rtl","rtlNoSwap","init","byClassName","byProp","rule","insert","forEach","reset","addToLookup","className","prop","value","getClassName","val","cache","hasOwnProperty","_injectRegisteredStyle","id","doLeftAndRightSwapInRTL","isRTL","dir","style","results","Object","values","identifier","property","rules","group","custom","resolve","classList","nextClassList","props","Array","isArray","item","push","key","createCacheKey","_resolveStyle","flatArray","isArrayOfNumbers","cacheKey","i","length","finalProps","classListToString","resolveWithNode","rnStyleNext","node","getDeclaration","getDOMStyleInfo","rdomClassList","rdomStyle","reduce","styleProps","rnClassList","rnStyle","rdomClassListNext","rdomStyleNext","concat","flatStyle","localizedStyle","keys","sort","styleProp","a","getStyleSheet","textContent","getTextContent","createCSS","result","name","compiled","prefix","list","join","trim","hyphenPattern","toCamelCase","str","replace","m","toUpperCase","nodeStyle","prototype","slice","call","getPropertyValue"],"mappings":";;;;;;;;AAcA,SAASA,SAAT,QAA0B,+BAA1B;AACA,OAAOC,mBAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,0BAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,0BAAlC;AACA,OAAOC,YAAP;AACA,OAAOC,QAAP;AACA,SAASC,gBAAT,EAA2BC,YAA3B;AAEA,IAAMC,WAAW,GAAG,EAApB;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAC5C,MAAIC,QAAJ,EAAcC,KAAd,EAAqBC,MAArB;AACA,MAAMC,QAAQ,GAAG;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE,EAAhB;AAAoBC,IAAAA,GAAG,EAAE,EAAzB;AAA6BC,IAAAA,SAAS,EAAE;AAAxC,GAAjB;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBR,IAAAA,QAAQ,GAAG;AAAEI,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE,EAAhB;AAAoBC,MAAAA,GAAG,EAAE,EAAzB;AAA6BC,MAAAA,SAAS,EAAE;AAAxC,KAAX;AACAN,IAAAA,KAAK,GAAGhB,0BAA0B,CAACF,mBAAmB,CAACa,gBAAD,CAApB,CAAlC;AACAM,IAAAA,MAAM,GAAG;AACPO,MAAAA,WAAW,EAAE,EADN;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAAT;AAIAf,IAAAA,QAAQ,CAAC,UAAAgB,IAAI;AAAA,aAAIV,KAAK,CAACW,MAAN,CAAaD,IAAb,EAAmBd,YAAY,CAACF,QAAhC,CAAJ;AAAA,KAAL,CAAR;AACAD,IAAAA,YAAY,CAACmB,OAAb,CAAqB,UAAAF,IAAI,EAAI;AAC3BV,MAAAA,KAAK,CAACW,MAAN,CAAaD,IAAb,EAAmBd,YAAY,CAACiB,KAAhC;AACD,KAFD;AAGD,GAXD;;AAaAN,EAAAA,IAAI;;AAEJ,WAASO,WAAT,CAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6C;AAC3C,QAAI,CAAChB,MAAM,CAACQ,MAAP,CAAcO,IAAd,CAAL,EAA0B;AACxBf,MAAAA,MAAM,CAACQ,MAAP,CAAcO,IAAd,IAAsB,EAAtB;AACD;;AACDf,IAAAA,MAAM,CAACQ,MAAP,CAAcO,IAAd,EAAoBC,KAApB,IAA6BF,SAA7B;AACAd,IAAAA,MAAM,CAACO,WAAP,CAAmBO,SAAnB,IAAgC;AAAEC,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,KAAK,EAALA;AAAR,KAAhC;AACD;;AAED,WAASC,YAAT,CAAsBF,IAAtB,EAA4BC,KAA5B,EAAmC;AACjC,QAAME,GAAG,GAAG3B,0BAA0B,CAACyB,KAAD,EAAQD,IAAR,CAAtC;AACA,QAAMI,KAAK,GAAGnB,MAAM,CAACQ,MAArB;AACA,WAAOW,KAAK,CAACJ,IAAD,CAAL,IAAeI,KAAK,CAACJ,IAAD,CAAL,CAAYK,cAAZ,CAA2BF,GAA3B,CAAf,IAAkDC,KAAK,CAACJ,IAAD,CAAL,CAAYG,GAAZ,CAAzD;AACD;;AAED,WAASG,sBAAT,CAAgCC,EAAhC,EAAoC;AAClC,QAAQC,uBAAR,GAA2CrC,WAA3C,CAAQqC,uBAAR;AAAA,QAAiCC,KAAjC,GAA2CtC,WAA3C,CAAiCsC,KAAjC;AACA,QAAMC,GAAG,GAAGD,KAAK,GAAID,uBAAuB,GAAG,KAAH,GAAW,WAAtC,GAAqD,KAAtE;;AACA,QAAI,CAACzB,QAAQ,CAAC2B,GAAD,CAAR,CAAcH,EAAd,CAAL,EAAwB;AACtB,UAAMI,KAAK,GAAG5C,sBAAsB,CAACK,SAAS,CAACF,YAAY,CAACqC,EAAD,CAAb,CAAV,CAApC;AACA,UAAMK,OAAO,GAAGvC,MAAM,CAACsC,KAAD,CAAtB;AACAE,MAAAA,MAAM,CAACC,MAAP,CAAcF,OAAd,EAAuBhB,OAAvB,CAA+B,gBAA4C;AAAA,YAAzCmB,UAAyC,QAAzCA,UAAyC;AAAA,YAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,YAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,YAAZhB,KAAY,QAAZA,KAAY;AACzEH,QAAAA,WAAW,CAACiB,UAAD,EAAaC,QAAb,EAAuBf,KAAvB,CAAX;AACAgB,QAAAA,KAAK,CAACrB,OAAN,CAAc,UAAAF,IAAI,EAAI;AACpB,cAAMwB,KAAK,GAAGtC,YAAY,CAACuC,MAAb,CAAoBH,QAApB,KAAiCpC,YAAY,CAACP,MAA5D;AACAW,UAAAA,KAAK,CAACW,MAAN,CAAaD,IAAb,EAAmBwB,KAAnB;AACD,SAHD;AAID,OAND;AAOAnC,MAAAA,QAAQ,CAAC2B,GAAD,CAAR,CAAcH,EAAd,IAAoB,IAApB;AACD;AACF;;AAKD,WAASa,OAAT,CAAiBT,KAAjB,EAAwBU,SAAxB,EAAmC;AACjC,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAI,CAACZ,KAAD,IAAU,CAACU,SAAf,EAA0B;AACxB,aAAOE,KAAP;AACD;;AAED,QAAIC,KAAK,CAACC,OAAN,CAAcJ,SAAd,CAAJ,EAA8B;AAC5BpD,MAAAA,YAAY,CAACoD,SAAD,CAAZ,CAAwBzB,OAAxB,CAAgC,UAAAmB,UAAU,EAAI;AAC5C,YAAIA,UAAJ,EAAgB;AACd,cAAIhC,QAAQ,CAACI,GAAT,CAAa4B,UAAb,KAA4B,IAA5B,IAAoC7B,QAAQ,CAACC,GAAT,CAAa4B,UAAb,KAA4B,IAApE,EAA0E;AACxE,gBAAMW,IAAI,GAAGxC,QAAQ,CAACC,GAAT,CAAa4B,UAAb,CAAb;AACAW,YAAAA,IAAI,CAACT,KAAL,CAAWrB,OAAX,CAAmB,UAAAF,IAAI,EAAI;AACzBV,cAAAA,KAAK,CAACW,MAAN,CAAaD,IAAb,EAAmBgC,IAAI,CAACR,KAAxB;AACD,aAFD;AAGAnC,YAAAA,QAAQ,CAACI,GAAT,CAAa4B,UAAb,IAA2B,IAA3B;AACD;;AAEDO,UAAAA,aAAa,CAACK,IAAd,CAAmBZ,UAAnB;AACD;AACF,OAZD;AAaD;;AAED,QAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;AAE7BL,MAAAA,sBAAsB,CAACK,KAAD,CAAtB;;AACA,UAAMiB,GAAG,GAAGC,cAAc,CAAClB,KAAD,CAA1B;AACAY,MAAAA,KAAK,GAAGO,aAAa,CAACnB,KAAD,EAAQiB,GAAR,CAArB;AACD,KALD,MAKO,IAAI,CAACJ,KAAK,CAACC,OAAN,CAAcd,KAAd,CAAL,EAA2B;AAEhCY,MAAAA,KAAK,GAAGO,aAAa,CAACnB,KAAD,CAArB;AACD,KAHM,MAGA;AAIL,UAAMoB,SAAS,GAAG9D,YAAY,CAAC0C,KAAD,CAA9B;AACA,UAAIqB,gBAAgB,GAAG,IAAvB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,YAAM3B,EAAE,GAAGwB,SAAS,CAACG,CAAD,CAApB;;AACA,YAAI,OAAO3B,EAAP,KAAc,QAAlB,EAA4B;AAC1ByB,UAAAA,gBAAgB,GAAG,KAAnB;AACD,SAFD,MAEO;AACL,cAAIA,gBAAJ,EAAsB;AACpBC,YAAAA,QAAQ,IAAI1B,EAAE,GAAG,GAAjB;AACD;;AACDD,UAAAA,sBAAsB,CAACC,EAAD,CAAtB;AACD;AACF;;AACD,UAAMqB,IAAG,GAAGI,gBAAgB,GAAGH,cAAc,CAACI,QAAD,CAAjB,GAA8B,IAA1D;;AACAV,MAAAA,KAAK,GAAGO,aAAa,CAACC,SAAD,EAAYH,IAAZ,CAArB;AACD;;AAEDN,IAAAA,aAAa,CAACK,IAAd,OAAAL,aAAa,qBAASC,KAAK,CAACF,SAAf,EAAb;AAEA,QAAMe,UAAU,GAAG;AACjBrC,MAAAA,SAAS,EAAEsC,iBAAiB,CAACf,aAAD,CADX;AAEjBD,MAAAA,SAAS,EAAEC;AAFM,KAAnB;;AAIA,QAAIC,KAAK,CAACZ,KAAV,EAAiB;AACfyB,MAAAA,UAAU,CAACzB,KAAX,GAAmBY,KAAK,CAACZ,KAAzB;AACD;;AAED,WAAOyB,UAAP;AACD;;AASD,WAASE,eAAT,CAAyBC,WAAzB,EAAsCC,IAAtC,EAA4C;AAC1C,aAASC,cAAT,CAAwB1C,SAAxB,EAAmC;AACjC,aAAOd,MAAM,CAACO,WAAP,CAAmBO,SAAnB,KAAiClB,WAAxC;AACD;;AAED,2BAAuD6D,eAAe,CAACF,IAAD,CAAtE;AAAA,QAAmBG,aAAnB,oBAAQtB,SAAR;AAAA,QAAyCuB,SAAzC,oBAAkCjC,KAAlC;;AAGA,gCAAmDgC,aAAa,CAACE,MAAd,CACjD,UAACC,UAAD,EAAa/C,SAAb,EAA2B;AACzB,4BAAwB0C,cAAc,CAAC1C,SAAD,CAAtC;AAAA,UAAQC,IAAR,mBAAQA,IAAR;AAAA,UAAcC,KAAd,mBAAcA,KAAd;;AACA,UAAID,IAAJ,EAAU;AACR8C,QAAAA,UAAU,CAACnC,KAAX,CAAiBX,IAAjB,IAAyBC,KAAzB;AACD,OAFD,MAEO;AACL6C,QAAAA,UAAU,CAACzB,SAAX,CAAqBM,IAArB,CAA0B5B,SAA1B;AACD;;AACD,aAAO+C,UAAP;AACD,KATgD,EAUjD;AAAEzB,MAAAA,SAAS,EAAE,EAAb;AAAiBV,MAAAA,KAAK,EAAE;AAAxB,KAViD,CAAnD;AAAA,QAAmBoC,WAAnB,yBAAQ1B,SAAR;AAAA,QAAuC2B,OAAvC,yBAAgCrC,KAAhC;;AAcA,mBAA+DS,OAAO,CAAC,CACrEhD,SAAS,CAAC4E,OAAD,CAD4D,EAErET,WAFqE,CAAD,CAAtE;AAAA,QAAmBU,iBAAnB,YAAQ5B,SAAR;AAAA,QAA6C6B,aAA7C,YAAsCvC,KAAtC;;AAOA,QAAMZ,SAAS,GAAGsC,iBAAiB,CAACY,iBAAiB,CAACE,MAAlB,CAAyBJ,WAAzB,CAAD,CAAnC;;AAIA,QAAMpC,KAAK,qBAAQiC,SAAR,CAAX;;AACAK,IAAAA,iBAAiB,CAACrD,OAAlB,CAA0B,UAAAG,SAAS,EAAI;AACrC,6BAAiB0C,cAAc,CAAC1C,SAAD,CAA/B;AAAA,UAAQC,IAAR,oBAAQA,IAAR;;AACA,UAAIW,KAAK,CAACX,IAAD,CAAT,EAAiB;AACfW,QAAAA,KAAK,CAACX,IAAD,CAAL,GAAc,EAAd;AACD;AACF,KALD;;AAOA,aAAcW,KAAd,EAAqBuC,aAArB;;AAEA,WAAO;AAAEnD,MAAAA,SAAS,EAATA,SAAF;AAAaY,MAAAA,KAAK,EAALA;AAAb,KAAP;AACD;;AAKD,WAASmB,aAAT,CAAuBnB,KAAvB,EAA8BiB,GAA9B,EAAmC;AACjC,QAAQpB,uBAAR,GAA2CrC,WAA3C,CAAQqC,uBAAR;AAAA,QAAiCC,KAAjC,GAA2CtC,WAA3C,CAAiCsC,KAAjC;AACA,QAAMC,GAAG,GAAGD,KAAK,GAAID,uBAAuB,GAAG,KAAH,GAAW,WAAtC,GAAqD,KAAtE;;AAGA,QAAIoB,GAAG,IAAI,IAAP,IAAe1C,QAAQ,CAACwB,GAAD,CAAR,CAAckB,GAAd,KAAsB,IAAzC,EAA+C;AAC7C,aAAO1C,QAAQ,CAACwB,GAAD,CAAR,CAAckB,GAAd,CAAP;AACD;;AAED,QAAMwB,SAAS,GAAGlF,YAAY,CAACyC,KAAD,CAA9B;AACA,QAAM0C,cAAc,GAAGtF,sBAAsB,CAACK,SAAS,CAACgF,SAAD,CAAV,CAA7C;AAGA,QAAM7B,KAAK,GAAGV,MAAM,CAACyC,IAAP,CAAYD,cAAZ,EACXE,IADW,GAEXV,MAFW,CAGV,UAACtB,KAAD,EAAQiC,SAAR,EAAsB;AACpB,UAAMvD,KAAK,GAAGoD,cAAc,CAACG,SAAD,CAA5B;;AACA,UAAIvD,KAAK,IAAI,IAAb,EAAmB;AACjB,YAAMF,SAAS,GAAGG,YAAY,CAACsD,SAAD,EAAYvD,KAAZ,CAA9B;;AACA,YAAIF,SAAJ,EAAe;AACbwB,UAAAA,KAAK,CAACF,SAAN,CAAgBM,IAAhB,CAAqB5B,SAArB;AACD,SAFD,MAEO;AAIL,cACEyD,SAAS,KAAK,eAAd,IACAA,SAAS,KAAK,sBADd,IAEAA,SAAS,KAAK,oBAHhB,EAIE;AACA,gBAAMC,CAAC,GAAGpF,MAAM,qBAAImF,SAAJ,EAAgBvD,KAAhB,EAAhB;AACAY,YAAAA,MAAM,CAACC,MAAP,CAAc2C,CAAd,EAAiB7D,OAAjB,CAAyB,iBAA2B;AAAA,kBAAxBmB,UAAwB,SAAxBA,UAAwB;AAAA,kBAAZE,KAAY,SAAZA,KAAY;AAClDM,cAAAA,KAAK,CAACF,SAAN,CAAgBM,IAAhB,CAAqBZ,UAArB;AACAE,cAAAA,KAAK,CAACrB,OAAN,CAAc,UAAAF,IAAI,EAAI;AACpBV,gBAAAA,KAAK,CAACW,MAAN,CAAaD,IAAb,EAAmBd,YAAY,CAACP,MAAhC;AACD,eAFD;AAGD,aALD;AAMD,WAZD,MAYO;AACL,gBAAI,CAACkD,KAAK,CAACZ,KAAX,EAAkB;AAChBY,cAAAA,KAAK,CAACZ,KAAN,GAAc,EAAd;AACD;;AAEDY,YAAAA,KAAK,CAACZ,KAAN,CAAY6C,SAAZ,IAAyBvD,KAAzB;AACD;AACF;AACF;;AACD,aAAOsB,KAAP;AACD,KAnCS,EAoCV;AAAEF,MAAAA,SAAS,EAAE;AAAb,KApCU,CAAd;;AAuCA,QAAIE,KAAK,CAACZ,KAAV,EAAiB;AACfY,MAAAA,KAAK,CAACZ,KAAN,GAAcpC,MAAM,CAACgD,KAAK,CAACZ,KAAP,CAApB;AACD;;AAED,QAAIiB,GAAG,IAAI,IAAX,EAAiB;AACf1C,MAAAA,QAAQ,CAACwB,GAAD,CAAR,CAAckB,GAAd,IAAqBL,KAArB;AACD;;AAED,WAAOA,KAAP;AACD;;AAED,SAAO;AACLmC,IAAAA,aADK,2BACW;AACd,UAAMC,WAAW,GAAG3E,KAAK,CAAC4E,cAAN,EAApB;;AAEA,UAAI,CAAC/F,SAAL,EAAgB;AACd0B,QAAAA,IAAI;AACL;;AAED,aAAO;AACLgB,QAAAA,EAAE,EAAE5B,gBADC;AAELgF,QAAAA,WAAW,EAAXA;AAFK,OAAP;AAID,KAZI;AAaLE,IAAAA,SAbK,qBAaK5C,KAbL,EAaYC,KAbZ,EAamB;AACtB,UAAM4C,MAAM,GAAG,EAAf;AACAjD,MAAAA,MAAM,CAACyC,IAAP,CAAYrC,KAAZ,EAAmBrB,OAAnB,CAA2B,UAAAmE,IAAI,EAAI;AACjC,YAAMpD,KAAK,GAAGM,KAAK,CAAC8C,IAAD,CAAnB;AACA,YAAMC,QAAQ,GAAG1F,OAAO,CAACqC,KAAD,EAAQoD,IAAR,CAAxB;AAEAlD,QAAAA,MAAM,CAACC,MAAP,CAAckD,QAAd,EAAwBpE,OAAxB,CAAgC,iBAA2B;AAAA,cAAxBmB,UAAwB,SAAxBA,UAAwB;AAAA,cAAZE,KAAY,SAAZA,KAAY;AACzD/B,UAAAA,QAAQ,CAACC,GAAT,CAAa4B,UAAb,IAA2B;AAAEG,YAAAA,KAAK,EAAEA,KAAK,IAAItC,YAAY,CAACN,OAA/B;AAAwC2C,YAAAA,KAAK,EAALA;AAAxC,WAA3B;AACA6C,UAAAA,MAAM,CAACC,IAAD,CAAN,GAAehD,UAAf;AACD,SAHD;AAID,OARD;AASA,aAAO+C,MAAP;AACD,KAzBI;AA0BL1C,IAAAA,OAAO,EAAPA,OA1BK;AA2BLpC,IAAAA,KAAK,EAALA,KA3BK;AA4BLsD,IAAAA,eAAe,EAAfA;AA5BK,GAAP;AA8BD;;AAKD,IAAMT,cAAc,GAAG,SAAjBA,cAAiB,CAAAtB,EAAE,EAAI;AAC3B,MAAM0D,MAAM,GAAG,IAAf;AACA,SAAUA,MAAV,SAAoB1D,EAApB;AACD,CAHD;;AAKA,IAAM8B,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA6B,IAAI;AAAA,SAAIA,IAAI,CAACC,IAAL,CAAU,GAAV,EAAeC,IAAf,EAAJ;AAAA,CAA9B;;AAKA,IAAMC,aAAa,GAAG,WAAtB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,OAAJ,CAAYH,aAAZ,EAA2B,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EAAJ;AAAA,GAA5B,CAAJ;AAAA,CAAvB;;AAEA,IAAMhC,eAAe,GAAG,SAAlBA,eAAkB,CAAAF,IAAI,EAAI;AAC9B,MAAMmC,SAAS,GAAGnC,IAAI,CAAC7B,KAAvB;AACA,MAAMU,SAAS,GAAGG,KAAK,CAACoD,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BtC,IAAI,CAACnB,SAAhC,CAAlB;AACA,MAAMV,KAAK,GAAG,EAAd;;AAGA,OAAK,IAAIuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyC,SAAS,CAACxC,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;AAC5C,QAAMlB,QAAQ,GAAG2D,SAAS,CAACjD,IAAV,CAAeQ,CAAf,CAAjB;;AACA,QAAIlB,QAAJ,EAAc;AAGZL,MAAAA,KAAK,CAAC2D,WAAW,CAACtD,QAAD,CAAZ,CAAL,GAA+B2D,SAAS,CAACI,gBAAV,CAA2B/D,QAA3B,CAA/B;AACD;AACF;;AACD,SAAO;AAAEK,IAAAA,SAAS,EAATA,SAAF;AAAaV,IAAAA,KAAK,EAALA;AAAb,GAAP;AACD,CAfD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\n/**\n * WARNING: changes to this file in particular can cause significant changes to\n * the results of render performance benchmarks.\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createCompileableStyle from './createCompileableStyle';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nimport flattenArray from '../../modules/flattenArray';\nimport flattenStyle from './flattenStyle';\nimport I18nManager from '../I18nManager';\nimport i18nStyle from './i18nStyle';\nimport { atomic, classic, inline, stringifyValueWithProperty } from './compile';\nimport initialRules from './initialRules';\nimport modality from './modality';\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from './constants';\n\nconst emptyObject = {};\n\nexport default function createStyleResolver() {\n  let inserted, sheet, lookup;\n  const resolved = { css: {}, ltr: {}, rtl: {}, rtlNoSwap: {} };\n\n  const init = () => {\n    inserted = { css: {}, ltr: {}, rtl: {}, rtlNoSwap: {} };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    lookup = {\n      byClassName: {},\n      byProp: {}\n    };\n    modality(rule => sheet.insert(rule, STYLE_GROUPS.modality));\n    initialRules.forEach(rule => {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToLookup(className, prop, value) {\n    if (!lookup.byProp[prop]) {\n      lookup.byProp[prop] = {};\n    }\n    lookup.byProp[prop][value] = className;\n    lookup.byClassName[className] = { prop, value };\n  }\n\n  function getClassName(prop, value) {\n    const val = stringifyValueWithProperty(value, prop);\n    const cache = lookup.byProp;\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    const { doLeftAndRightSwapInRTL, isRTL } = I18nManager;\n    const dir = isRTL ? (doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap') : 'ltr';\n    if (!inserted[dir][id]) {\n      const style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      const results = atomic(style);\n      Object.values(results).forEach(({ identifier, property, rules, value }) => {\n        addToLookup(identifier, property, value);\n        rules.forEach(rule => {\n          const group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n\n  /**\n   * Resolves a React Native style object to DOM attributes\n   */\n  function resolve(style, classList) {\n    const nextClassList = [];\n    let props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach(identifier => {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            const item = resolved.css[identifier];\n            item.rules.forEach(rule => {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      // fast and cachable\n      _injectRegisteredStyle(style);\n      const key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      // resolve a plain RN style object\n      props = _resolveStyle(style);\n    } else {\n      // flatten the style array\n      // cache resolved props when all styles are registered\n      // otherwise fallback to resolving\n      const flatArray = flattenArray(style);\n      let isArrayOfNumbers = true;\n      let cacheKey = '';\n      for (let i = 0; i < flatArray.length; i++) {\n        const id = flatArray[i];\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n          _injectRegisteredStyle(id);\n        }\n      }\n      const key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n      props = _resolveStyle(flatArray, key);\n    }\n\n    nextClassList.push(...props.classList);\n\n    const finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n\n  /**\n   * Resolves a React Native style object to DOM attributes, accounting for\n   * the existing styles applied to the DOM node.\n   *\n   * To determine the next style, some of the existing DOM state must be\n   * converted back into React Native styles.\n   */\n  function resolveWithNode(rnStyleNext, node) {\n    function getDeclaration(className) {\n      return lookup.byClassName[className] || emptyObject;\n    }\n\n    const { classList: rdomClassList, style: rdomStyle } = getDOMStyleInfo(node);\n    // Convert the DOM classList back into a React Native form\n    // Preserves unrecognized class names.\n    const { classList: rnClassList, style: rnStyle } = rdomClassList.reduce(\n      (styleProps, className) => {\n        const { prop, value } = getDeclaration(className);\n        if (prop) {\n          styleProps.style[prop] = value;\n        } else {\n          styleProps.classList.push(className);\n        }\n        return styleProps;\n      },\n      { classList: [], style: {} }\n    );\n\n    // Create next DOM style props from current and next RN styles\n    const { classList: rdomClassListNext, style: rdomStyleNext } = resolve([\n      i18nStyle(rnStyle),\n      rnStyleNext\n    ]);\n\n    // Final className\n    // Add the current class names not managed by React Native\n    const className = classListToString(rdomClassListNext.concat(rnClassList));\n\n    // Final style\n    // Next class names take priority over current inline styles\n    const style = { ...rdomStyle };\n    rdomClassListNext.forEach(className => {\n      const { prop } = getDeclaration(className);\n      if (style[prop]) {\n        style[prop] = '';\n      }\n    });\n    // Next inline styles take priority over current inline styles\n    Object.assign(style, rdomStyleNext);\n\n    return { className, style };\n  }\n\n  /**\n   * Resolves a React Native style object\n   */\n  function _resolveStyle(style, key) {\n    const { doLeftAndRightSwapInRTL, isRTL } = I18nManager;\n    const dir = isRTL ? (doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap') : 'ltr';\n\n    // faster: memoized\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    const flatStyle = flattenStyle(style);\n    const localizedStyle = createCompileableStyle(i18nStyle(flatStyle));\n\n    // slower: convert style object to props and cache\n    const props = Object.keys(localizedStyle)\n      .sort()\n      .reduce(\n        (props, styleProp) => {\n          const value = localizedStyle[styleProp];\n          if (value != null) {\n            const className = getClassName(styleProp, value);\n            if (className) {\n              props.classList.push(className);\n            } else {\n              // Certain properties and values are not transformed by 'createReactDOMStyle' as they\n              // require more complex transforms into multiple CSS rules. Here we assume that StyleManager\n              // can bind these styles to a className, and prevent them becoming invalid inline-styles.\n              if (\n                styleProp === 'pointerEvents' ||\n                styleProp === 'placeholderTextColor' ||\n                styleProp === 'animationKeyframes'\n              ) {\n                const a = atomic({ [styleProp]: value });\n                Object.values(a).forEach(({ identifier, rules }) => {\n                  props.classList.push(identifier);\n                  rules.forEach(rule => {\n                    sheet.insert(rule, STYLE_GROUPS.atomic);\n                  });\n                });\n              } else {\n                if (!props.style) {\n                  props.style = {};\n                }\n                // 4x slower render\n                props.style[styleProp] = value;\n              }\n            }\n          }\n          return props;\n        },\n        { classList: [] }\n      );\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet() {\n      const textContent = sheet.getTextContent();\n      // Reset state on the server so critical css is always the result\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent\n      };\n    },\n    createCSS(rules, group) {\n      const result = {};\n      Object.keys(rules).forEach(name => {\n        const style = rules[name];\n        const compiled = classic(style, name);\n\n        Object.values(compiled).forEach(({ identifier, rules }) => {\n          resolved.css[identifier] = { group: group || STYLE_GROUPS.classic, rules };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve,\n    sheet,\n    resolveWithNode\n  };\n}\n\n/**\n * Misc helpers\n */\nconst createCacheKey = id => {\n  const prefix = 'rn';\n  return `${prefix}-${id}`;\n};\n\nconst classListToString = list => list.join(' ').trim();\n\n/**\n * Copies classList and style data from a DOM node\n */\nconst hyphenPattern = /-([a-z])/g;\nconst toCamelCase = str => str.replace(hyphenPattern, m => m[1].toUpperCase());\n\nconst getDOMStyleInfo = node => {\n  const nodeStyle = node.style;\n  const classList = Array.prototype.slice.call(node.classList);\n  const style = {};\n  // DOM style is a CSSStyleDeclaration\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\n  for (let i = 0; i < nodeStyle.length; i += 1) {\n    const property = nodeStyle.item(i);\n    if (property) {\n      // DOM style uses hyphenated prop names and may include vendor prefixes\n      // Transform back into React DOM style.\n      style[toCamelCase(property)] = nodeStyle.getPropertyValue(property);\n    }\n  }\n  return { classList, style };\n};\n"]},"metadata":{},"sourceType":"module"}