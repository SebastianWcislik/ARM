{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\VSCodeProjects\\\\ARM\\\\Views\\\\ARMMyProfile.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { vh } from \"react-native-viewport-units-fix\";\nimport { getToken, getRoleToken } from \"../API/token\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar serwerAdress = \"https://arm-dev.herokuapp.com\";\nexport function ARMMyProfile(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedUser = _useState2[0],\n      setLoggedUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userEmail = _useState6[0],\n      setUserEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userRole = _useState8[0],\n      setUserRole = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentState = _useState10[0],\n      setCurrentState = _useState10[1];\n\n  var _useState11 = useState(1),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedState = _useState12[0],\n      setSelectedState = _useState12[1];\n\n  var GetLoggedUser = function GetLoggedUser() {\n    getToken().then(function (res) {\n      setLoggedUser(res);\n      fetch(serwerAdress + \"/getUserInfo/\" + \"'\" + res + \"'\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        setUserName(json.Name);\n        setUserEmail(json.Email);\n        setCurrentState(json.State);\n      });\n    });\n  };\n\n  var SetUserState = function SetUserState() {\n    fetch(serwerAdress + \"/getUserState/\" + \"'\" + userEmail + \"'\" + \"/\" + \"'\" + selectedState + \"'\").then(GetLoggedUser);\n  };\n\n  var GetUserRole = function GetUserRole() {\n    getRoleToken().then(function (res) {\n      return setUserRole(res);\n    });\n  };\n\n  useEffect(function () {\n    GetLoggedUser();\n    GetUserRole();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.loggedUserStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Zalogowany jako, \", loggedUser ? loggedUser : null), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"M\\xF3j profil\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: myProfile.myData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Imi\\u0119: \", userName ? userName : null), React.createElement(Text, {\n    style: myProfile.myData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Email: \", userEmail ? userEmail : null), React.createElement(Text, {\n    style: myProfile.myData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Rola: \", userRole ? userRole : null), React.createElement(Text, {\n    style: myProfile.myState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Tw\\xF3j obecny status to:\", \" \", currentState == 1 ? React.createElement(Text, {\n    style: states.available,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Dost\\u0119pny\") : currentState == 2 ? React.createElement(Text, {\n    style: states.unavailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Niedost\\u0119pny\") : currentState == 3 ? React.createElement(Text, {\n    style: states.busy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Na akcji\") : null), React.createElement(Text, {\n    style: myProfile.myData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Zmie\\u0144 sw\\xF3j obecny status na: \"), React.createElement(DropDownPicker, {\n    items: [{\n      label: \"Dostępny\",\n      value: 1\n    }, {\n      label: \"Niedostępny\",\n      value: 2\n    }, {\n      label: \"Na akcji\",\n      value: 3\n    }],\n    containerStyle: {\n      height: 6 * vh\n    },\n    defaultValue: selectedState,\n    style: myProfile.statePicker,\n    dropDownStyle: {\n      backgroundColor: \"dodgerblue\"\n    },\n    onChangeItem: function onChangeItem(itemValue) {\n      return setSelectedState(itemValue.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: SetUserState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Zmie\\u0144 status\")), React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"Zmiana hasła\", {\n        name: \"Zmiana hasła\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Zmiana has\\u0142a\")), React.createElement(TouchableOpacity, {\n    style: userRole == \"Admin\" ? navigationStyle.navigationButton : {\n      display: \"none\"\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"Rejestracja\", {\n        name: \"Rejestracja\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Zarejestruj u\\u017Cytkownika\")), React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"ARM\", {\n        name: \"ARM\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Powr\\xF3t do listy\")))));\n}","map":{"version":3,"sources":["F:/VSCodeProjects/ARM/Views/ARMMyProfile.js"],"names":["React","useEffect","useState","vh","getToken","getRoleToken","DropDownPicker","serwerAdress","ARMMyProfile","navigation","loggedUser","setLoggedUser","userName","setUserName","userEmail","setUserEmail","userRole","setUserRole","currentState","setCurrentState","selectedState","setSelectedState","GetLoggedUser","then","res","fetch","response","json","Name","Email","State","SetUserState","GetUserRole","styles","body","loggedUserStyle","title","myProfile","myData","myState","states","available","unavailable","busy","label","value","height","statePicker","backgroundColor","itemValue","navigationStyle","navigationButton","navigationButtonText","navigate","name","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,iCAAnB;AACA,SAASC,QAAT,EAAmBC,YAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;;;AASA,IAAMC,YAAY,GAAG,+BAArB;AAEA,OAAO,SAASC,YAAT,OAAsC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC3C,kBAAoCP,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,mBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCX,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgCb,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,mBAAwCf,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOgB,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAA0CjB,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOkB,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BlB,IAAAA,QAAQ,GAAGmB,IAAX,CAAgB,UAACC,GAAD,EAAS;AACvBb,MAAAA,aAAa,CAACa,GAAD,CAAb;AACAC,MAAAA,KAAK,CAAClB,YAAY,GAAG,eAAf,GAAiC,GAAjC,GAAuCiB,GAAvC,GAA6C,GAA9C,CAAL,CACGD,IADH,CACQ,UAACG,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADR,EAEGJ,IAFH,CAEQ,UAACI,IAAD,EAAU;AACdd,QAAAA,WAAW,CAACc,IAAI,CAACC,IAAN,CAAX;AACAb,QAAAA,YAAY,CAACY,IAAI,CAACE,KAAN,CAAZ;AACAV,QAAAA,eAAe,CAACQ,IAAI,CAACG,KAAN,CAAf;AACD,OANH;AAOD,KATD;AAUD,GAXD;;AAaA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBN,IAAAA,KAAK,CACHlB,YAAY,GACV,gBADF,GAEE,GAFF,GAGEO,SAHF,GAIE,GAJF,GAKE,GALF,GAME,GANF,GAOEM,aAPF,GAQE,GATC,CAAL,CAUEG,IAVF,CAUOD,aAVP;AAWD,GAZD;;AAcA,MAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB3B,IAAAA,YAAY,GAAGkB,IAAf,CAAoB,UAACC,GAAD;AAAA,aAASP,WAAW,CAACO,GAAD,CAApB;AAAA,KAApB;AACD,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,aAAa;AACbU,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoBzB,UAAU,GAAGA,UAAH,GAAgB,IAD9C,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEuB,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,SAAS,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACS1B,QAAQ,GAAGA,QAAH,GAAc,IAD/B,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,SAAS,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUxB,SAAS,GAAGA,SAAH,GAAe,IADlC,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEuB,SAAS,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACStB,QAAQ,GAAGA,QAAH,GAAc,IAD/B,CAPF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqB,SAAS,CAACE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACyB,GADzB,EAEGrB,YAAY,IAAI,CAAhB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAEGvB,YAAY,IAAI,CAAhB,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsB,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADE,GAEAxB,YAAY,IAAI,CAAhB,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsB,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,GAEA,IARN,CAVF,EAoBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,SAAS,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CApBF,EAqBE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE,CACL;AAAEM,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KADK,EAEL;AAAED,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAFK,EAGL;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAHK,CADT;AAME,IAAA,cAAc,EAAE;AAAEC,MAAAA,MAAM,EAAE,IAAI3C;AAAd,KANlB;AAOE,IAAA,YAAY,EAAEiB,aAPhB;AAQE,IAAA,KAAK,EAAEiB,SAAS,CAACU,WARnB;AASE,IAAA,aAAa,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KATjB;AAUE,IAAA,YAAY,EAAE,sBAACC,SAAD;AAAA,aAAe5B,gBAAgB,CAAC4B,SAAS,CAACJ,KAAX,CAA/B;AAAA,KAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAiCE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEK,eAAe,CAACC,gBADzB;AAEE,IAAA,OAAO,EAAEpB,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,eAAe,CAACE,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CAjCF,EAyCE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEF,eAAe,CAACC,gBADzB;AAEE,IAAA,OAAO,EAAE;AAAA,aACP1C,UAAU,CAAC4C,QAAX,CAAoB,cAApB,EAAoC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApC,CADO;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,eAAe,CAACE,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANF,CAzCF,EAmDE,oBAAC,gBAAD;AACE,IAAA,KAAK,EACHpC,QAAQ,IAAI,OAAZ,GACIkC,eAAe,CAACC,gBADpB,GAEI;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAJR;AAME,IAAA,OAAO,EAAE;AAAA,aACP9C,UAAU,CAAC4C,QAAX,CAAoB,aAApB,EAAmC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAnC,CADO;AAAA,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,eAAe,CAACE,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAVF,CAnDF,EAiEE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEF,eAAe,CAACC,gBADzB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM1C,UAAU,CAAC4C,QAAX,CAAoB,KAApB,EAA2B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3B,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,eAAe,CAACE,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,CAjEF,CAFF,CAJF,CADF;AAoFD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { vh } from \"react-native-viewport-units-fix\";\r\nimport { getToken, getRoleToken } from \"../API/token\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nconst serwerAdress = \"https://arm-dev.herokuapp.com\"; // API\r\n\r\nexport function ARMMyProfile({ navigation }) {\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  const [currentState, setCurrentState] = useState(\"\");\r\n  const [selectedState, setSelectedState] = useState(1);\r\n\r\n  const GetLoggedUser = () => {\r\n    getToken().then((res) => {\r\n      setLoggedUser(res);\r\n      fetch(serwerAdress + \"/getUserInfo/\" + \"'\" + res + \"'\")\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          setUserName(json.Name);\r\n          setUserEmail(json.Email);\r\n          setCurrentState(json.State);\r\n        });\r\n    });\r\n  };\r\n\r\n  const SetUserState = () => {\r\n    fetch(\r\n      serwerAdress +\r\n        \"/getUserState/\" +\r\n        \"'\" +\r\n        userEmail +\r\n        \"'\" +\r\n        \"/\" +\r\n        \"'\" +\r\n        selectedState +\r\n        \"'\"\r\n    ).then(GetLoggedUser);\r\n  };\r\n\r\n  const GetUserRole = () => {\r\n    getRoleToken().then((res) => setUserRole(res));\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetLoggedUser();\r\n    GetUserRole();\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.body}>\r\n      <Text style={styles.loggedUserStyle}>\r\n        Zalogowany jako, {loggedUser ? loggedUser : null}\r\n      </Text>\r\n      <View>\r\n        <Text style={styles.title}>Mój profil</Text>\r\n        <View>\r\n          <Text style={myProfile.myData}>\r\n            Imię: {userName ? userName : null}\r\n          </Text>\r\n          <Text style={myProfile.myData}>\r\n            Email: {userEmail ? userEmail : null}\r\n          </Text>\r\n          <Text style={myProfile.myData}>\r\n            Rola: {userRole ? userRole : null}\r\n          </Text>\r\n          <Text style={myProfile.myState}>\r\n            Twój obecny status to:{\" \"}\r\n            {currentState == 1 ? (\r\n              <Text style={states.available}>Dostępny</Text>\r\n            ) : currentState == 2 ? (\r\n              <Text style={states.unavailable}>Niedostępny</Text>\r\n            ) : currentState == 3 ? (\r\n              <Text style={states.busy}>Na akcji</Text>\r\n            ) : null}\r\n          </Text>\r\n          <Text style={myProfile.myData}>Zmień swój obecny status na: </Text>\r\n          <DropDownPicker\r\n            items={[\r\n              { label: \"Dostępny\", value: 1 },\r\n              { label: \"Niedostępny\", value: 2 },\r\n              { label: \"Na akcji\", value: 3 },\r\n            ]}\r\n            containerStyle={{ height: 6 * vh }}\r\n            defaultValue={selectedState}\r\n            style={myProfile.statePicker}\r\n            dropDownStyle={{ backgroundColor: \"dodgerblue\" }}\r\n            onChangeItem={(itemValue) => setSelectedState(itemValue.value)}\r\n          />\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={SetUserState}\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>\r\n              Zmień status\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={() =>\r\n              navigation.navigate(\"Zmiana hasła\", { name: \"Zmiana hasła\" })\r\n            }\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>\r\n              Zmiana hasła\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={\r\n              userRole == \"Admin\"\r\n                ? navigationStyle.navigationButton\r\n                : { display: \"none\" }\r\n            }\r\n            onPress={() =>\r\n              navigation.navigate(\"Rejestracja\", { name: \"Rejestracja\" })\r\n            }\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>\r\n              Zarejestruj użytkownika\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={() => navigation.navigate(\"ARM\", { name: \"ARM\" })}\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>\r\n              Powrót do listy\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}