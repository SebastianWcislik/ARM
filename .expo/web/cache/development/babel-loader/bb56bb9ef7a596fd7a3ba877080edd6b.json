{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\VSCodeProjects\\\\ARM\\\\Views\\\\ARMLogin.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar serwerAdress = \"https://arm-dev.herokuapp.com\";\n\nvar dismissKeyboard = function dismissKeyboard() {\n  if (Platform.OS != \"web\") {\n    Keyboard.dismiss();\n  }\n};\n\nexport default function ARMLogin(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errMessage = _useState6[0],\n      setErrMessage = _useState6[1];\n\n  var loginUser = function loginUser() {\n    setErrMessage(\"\");\n\n    if (email == null || email == \"\") {\n      setErrMessage(\"Wpisz adres email\");\n      return;\n    }\n\n    if (password == null || password == \"\") {\n      setErrMessage(\"Wpisz hasło\");\n      return;\n    }\n\n    login(email, password).then(function _callee(res) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(setToken(res.loggedUser));\n\n            case 2:\n              navigation.navigate(\"ARM\", {\n                name: \"ARM\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      return setErrMessage(err.message);\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return dismissKeyboard();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Logowanie\"), React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    placeholder: \"Nazwa u\\u017Cytkownika\",\n    value: email,\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    placeholder: \"Has\\u0142o\",\n    value: password,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(val) {\n      return setPassword(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: navigationStyle.loginButton,\n    onPress: loginUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Zaloguj\")), errMessage ? React.createElement(View, {\n    style: styles.errMessageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.errMessageColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, errMessage)) : null)));\n}","map":{"version":3,"sources":["F:/VSCodeProjects/ARM/Views/ARMLogin.js"],"names":["serwerAdress","dismissKeyboard","Platform","OS","Keyboard","dismiss","ARMLogin","navigation","useState","email","setEmail","password","setPassword","errMessage","setErrMessage","loginUser","login","then","res","setToken","loggedUser","navigate","name","catch","err","message","styles","body","title","textInputStyle","val","navigationStyle","loginButton","navigationButtonText","errMessageStyle","errMessageColor"],"mappings":"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","sourcesContent":["const serwerAdress = \"https://arm-dev.herokuapp.com\"; // API\r\n\r\nconst dismissKeyboard = () => {\r\n  if (Platform.OS != \"web\") {\r\n    Keyboard.dismiss();\r\n  }\r\n};\r\n\r\nexport default function ARMLogin({ navigation }) {\r\n  // Zmienne do logowania\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Odpowiedź z API - errorHandler\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n  const loginUser = () => {\r\n    setErrMessage(\"\");\r\n\r\n    if (email == null || email == \"\") {\r\n      setErrMessage(\"Wpisz adres email\");\r\n      return;\r\n    }\r\n\r\n    if (password == null || password == \"\") {\r\n      setErrMessage(\"Wpisz hasło\");\r\n      return;\r\n    }\r\n\r\n    login(email, password)\r\n      .then(async (res) => {\r\n        await setToken(res.loggedUser);\r\n        navigation.navigate(\"ARM\", { name: \"ARM\" });\r\n      })\r\n      .catch((err) => setErrMessage(err.message));\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => dismissKeyboard()}>\r\n      <SafeAreaView style={styles.body}>\r\n        <View>\r\n          <Text style={styles.title}>Logowanie</Text>\r\n          <TextInput\r\n            style={styles.textInputStyle}\r\n            placeholder=\"Nazwa użytkownika\"\r\n            value={email}\r\n            onChangeText={(val) => setEmail(val)}\r\n          />\r\n          <TextInput\r\n            style={styles.textInputStyle}\r\n            placeholder=\"Hasło\"\r\n            value={password}\r\n            secureTextEntry={true}\r\n            onChangeText={(val) => setPassword(val)}\r\n          />\r\n          <TouchableOpacity\r\n            style={navigationStyle.loginButton}\r\n            onPress={loginUser}\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>Zaloguj</Text>\r\n          </TouchableOpacity>\r\n          {errMessage ? (\r\n            <View style={styles.errMessageStyle}>\r\n              <Text style={styles.errMessageColor}>{errMessage}</Text>\r\n            </View>\r\n          ) : null}\r\n        </View>\r\n      </SafeAreaView>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}