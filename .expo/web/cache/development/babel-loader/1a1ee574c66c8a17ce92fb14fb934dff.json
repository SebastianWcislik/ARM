{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\VSCodeProjects\\\\ARM\\\\Views\\\\ARMLogin.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { setToken } from \"./API/token\";\nimport { vh } from \"react-native-viewport-units-fix\";\nimport { login } from \"../API/mock\";\n\nvar dismissKeyboard = function dismissKeyboard() {\n  if (Platform.OS != \"web\") {\n    Keyboard.dismiss();\n  }\n};\n\nexport default function ARMLogin(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errMessage = _useState6[0],\n      setErrMessage = _useState6[1];\n\n  var loginUser = function loginUser() {\n    setErrMessage(\"\");\n\n    if (email == null || email == \"\") {\n      setErrMessage(\"Wpisz adres email\");\n      return;\n    }\n\n    if (password == null || password == \"\") {\n      setErrMessage(\"Wpisz has≈Ço\");\n      return;\n    }\n\n    login(email, password).then(function _callee(res) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(setToken(res.loggedUser));\n\n            case 2:\n              navigation.navigate(\"ARM\", {\n                name: \"ARM\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      return setErrMessage(err.message);\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return dismissKeyboard();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Logowanie\"), React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    placeholder: \"Nazwa u\\u017Cytkownika\",\n    value: email,\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    placeholder: \"Has\\u0142o\",\n    value: password,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(val) {\n      return setPassword(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: navigationStyle.loginButton,\n    onPress: loginUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Zaloguj\")), errMessage ? React.createElement(View, {\n    style: styles.errMessageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.errMessageColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, errMessage)) : null)));\n}\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\"\n  },\n  title: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    fontSize: 2.5 * vh,\n    fontWeight: \"bold\",\n    marginBottom: \"5%\",\n    marginTop: \"5%\"\n  },\n  textInputStyle: {\n    height: 5 * vh,\n    width: \"95%\",\n    margin: 5,\n    marginBottom: 15\n  },\n  errMessageStyle: {\n    padding: 10,\n    position: \"relative\",\n    width: 200\n  },\n  errMessageColor: {\n    color: \"orange\"\n  }\n});\nvar navigationStyle = StyleSheet.create({\n  loginButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 1 * vh,\n    backgroundColor: \"#0064C8\",\n    width: 200,\n    borderRadius: 5\n  },\n  navigationButtonText: {\n    alignItems: \"center\",\n    fontSize: 2 * vh,\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["F:/VSCodeProjects/ARM/Views/ARMLogin.js"],"names":["React","useState","setToken","vh","login","dismissKeyboard","Platform","OS","Keyboard","dismiss","ARMLogin","navigation","email","setEmail","password","setPassword","errMessage","setErrMessage","loginUser","then","res","loggedUser","navigate","name","catch","err","message","styles","body","title","textInputStyle","val","navigationStyle","loginButton","navigationButtonText","errMessageStyle","errMessageColor","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","backgroundColor","marginLeft","marginRight","fontSize","fontWeight","marginBottom","marginTop","height","width","margin","padding","position","color","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { setToken } from \"./API/token\";\r\nimport { vh } from \"react-native-viewport-units-fix\";\r\nimport { login } from \"../API/mock\";\r\n\r\nconst dismissKeyboard = () => {\r\n  if (Platform.OS != \"web\") {\r\n    Keyboard.dismiss();\r\n  }\r\n};\r\n\r\nexport default function ARMLogin({ navigation }) {\r\n  // Zmienne do logowania\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Odpowied≈∫ z API - errorHandler\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n  const loginUser = () => {\r\n    setErrMessage(\"\");\r\n\r\n    if (email == null || email == \"\") {\r\n      setErrMessage(\"Wpisz adres email\");\r\n      return;\r\n    }\r\n\r\n    if (password == null || password == \"\") {\r\n      setErrMessage(\"Wpisz has≈Ço\");\r\n      return;\r\n    }\r\n\r\n    login(email, password)\r\n      .then(async (res) => {\r\n        await setToken(res.loggedUser);\r\n        navigation.navigate(\"ARM\", { name: \"ARM\" });\r\n      })\r\n      .catch((err) => setErrMessage(err.message));\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => dismissKeyboard()}>\r\n      <SafeAreaView style={styles.body}>\r\n        <View>\r\n          <Text style={styles.title}>Logowanie</Text>\r\n          <TextInput\r\n            style={styles.textInputStyle}\r\n            placeholder=\"Nazwa u≈ºytkownika\"\r\n            value={email}\r\n            onChangeText={(val) => setEmail(val)}\r\n          />\r\n          <TextInput\r\n            style={styles.textInputStyle}\r\n            placeholder=\"Has≈Ço\"\r\n            value={password}\r\n            secureTextEntry={true}\r\n            onChangeText={(val) => setPassword(val)}\r\n          />\r\n          <TouchableOpacity\r\n            style={navigationStyle.loginButton}\r\n            onPress={loginUser}\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>Zaloguj</Text>\r\n          </TouchableOpacity>\r\n          {errMessage ? (\r\n            <View style={styles.errMessageStyle}>\r\n              <Text style={styles.errMessageColor}>{errMessage}</Text>\r\n            </View>\r\n          ) : null}\r\n        </View>\r\n      </SafeAreaView>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"dodgerblue\",\r\n  },\r\n  title: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    fontSize: 2.5 * vh,\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"5%\",\r\n    marginTop: \"5%\",\r\n  },\r\n  textInputStyle: {\r\n    height: 5 * vh,\r\n    width: \"95%\",\r\n    margin: 5,\r\n    marginBottom: 15,\r\n  },\r\n  errMessageStyle: {\r\n    padding: 10,\r\n    position: \"relative\",\r\n    width: 200,\r\n  },\r\n  errMessageColor: {\r\n    color: \"orange\",\r\n  },\r\n});\r\n\r\nconst navigationStyle = StyleSheet.create({\r\n  loginButton: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 1 * vh,\r\n    backgroundColor: \"#0064C8\",\r\n    width: 200,\r\n    borderRadius: 5,\r\n  },\r\n  navigationButtonText: {\r\n    alignItems: \"center\",\r\n    fontSize: 2 * vh,\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}