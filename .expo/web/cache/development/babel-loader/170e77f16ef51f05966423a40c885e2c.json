{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\VSCodeProjects\\\\ARM\\\\Views\\\\ARMUsersList.js\";\nimport React, { useState } from \"react\";\nimport { getToken, setRoleToken, setEmailToken } from \"./API/token\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar serwerAdress = \"https://arm-dev.herokuapp.com\";\nexport function ARMUsersList(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loggedUser = _useState4[0],\n      setLoggedUser = _useState4[1];\n\n  var GetList = function GetList() {\n    fetch(serwerAdress + \"/users\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setUsers(json);\n    });\n  };\n\n  var GetLoggedUser = function GetLoggedUser() {\n    getToken().then(function (res) {\n      return setLoggedUser(res);\n    });\n  };\n\n  var GetRoles = function GetRoles() {\n    getToken().then(function (res) {\n      fetch(serwerAdress + \"/getRoles/\" + \"'\" + res + \"'\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        setRoleToken(json[0].Name);\n      });\n    });\n  };\n\n  var GetUserDetails = function GetUserDetails(email) {\n    setEmailToken(email);\n    navigation.navigate(\"Informacje o Użytkowniku\", {\n      name: \"Informacje\"\n    });\n  };\n\n  useFocusEffect(React.useCallback(function () {\n    GetLoggedUser();\n    GetList();\n    GetRoles();\n  }, []));\n  return React.createElement(SafeAreaView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.loggedUserStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Zalogowany jako, \", loggedUser ? loggedUser : null), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.ARMtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Aplikacja Ratownik\\xF3w Mazowsza\"), React.createElement(View, {\n    style: styles.usersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    showsHorizontalScrollIndicator: false,\n    data: Users,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, item.State == 1 ? React.createElement(TouchableOpacity, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.users,\n        onPress: function onPress() {\n          return GetUserDetails(item.Email);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, item.Name, \" -\", \" \", React.createElement(Text, {\n        style: states.available,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }\n      }, \"Dost\\u0119pny\"))) : item.State == 2 ? React.createElement(Text, {\n        style: styles.users,\n        onPress: function onPress() {\n          return GetUserDetails(item.Email);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, item.Name, \" - \", \"\", React.createElement(Text, {\n        style: states.unavailable,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, \"Niedost\\u0119pny\")) : item.State == 3 ? React.createElement(Text, {\n        style: styles.users,\n        onPress: function onPress() {\n          return GetUserDetails(item.Email);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, item.Name, \" - \", \"\", React.createElement(Text, {\n        style: states.busy,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, \"Na akcji\")) : React.createElement(Text, {\n        style: styles.users,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }, \"B\\u0142\\u0105d wczytywania u\\u017Cytkownik\\xF3w\"));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.refreshbutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: GetList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Od\\u015Bwie\\u017C list\\u0119\")), React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"Wydarzenia\", {\n        name: \"Wydarzenia\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Wydarzenia\")), React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"Mój profil\", {\n        name: \"Mój profil\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"M\\xF3j profil\")), React.createElement(TouchableOpacity, {\n    style: navigationStyle.navigationButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"Logowanie\", {\n        name: \"Logowanie\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: navigationStyle.navigationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Wyloguj\")))));\n}\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\"\n  },\n  container: {\n    height: 70 * vh\n  },\n  ARMtitle: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    fontSize: 2.5 * vh,\n    fontWeight: \"bold\",\n    marginBottom: \"5%\",\n    marginTop: \"-5%\"\n  },\n  usersList: {\n    height: 40 * vh,\n    alignItems: \"center\"\n  },\n  users: {\n    alignItems: \"center\",\n    fontSize: 2.3 * vh,\n    marginTop: 20\n  },\n  refreshbutton: {\n    marginTop: \"5%\",\n    borderRadius: 5\n  },\n  loggedUserStyle: {\n    position: \"absolute\",\n    top: 20,\n    left: 0,\n    fontSize: 1.5 * vh\n  }\n});\nvar states = StyleSheet.create({\n  available: {\n    color: \"darkgreen\"\n  },\n  unavailable: {\n    color: \"darkred\"\n  },\n  busy: {\n    color: \"orange\"\n  }\n});\nvar navigationStyle = StyleSheet.create({\n  navigationButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 1 * vh,\n    backgroundColor: \"#0064C8\",\n    marginTop: 10,\n    borderRadius: 5\n  },\n  navigationButtonText: {\n    alignItems: \"center\",\n    fontSize: 2 * vh,\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["F:/VSCodeProjects/ARM/Views/ARMUsersList.js"],"names":["React","useState","getToken","setRoleToken","setEmailToken","serwerAdress","ARMUsersList","navigation","Users","setUsers","loggedUser","setLoggedUser","GetList","fetch","then","response","json","GetLoggedUser","res","GetRoles","Name","GetUserDetails","email","navigate","name","useFocusEffect","useCallback","styles","body","loggedUserStyle","container","ARMtitle","usersList","item","State","users","Email","states","available","unavailable","busy","index","toString","refreshbutton","navigationStyle","navigationButton","navigationButtonText","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","backgroundColor","height","vh","marginLeft","marginRight","fontSize","fontWeight","marginBottom","marginTop","borderRadius","position","top","left","color","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { getToken, setRoleToken, setEmailToken } from \"./API/token\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nconst serwerAdress = \"https://arm-dev.herokuapp.com\"; // API\r\n\r\nexport function ARMUsersList({ navigation }) {\r\n  const [Users, setUsers] = useState([]); // lista użytkowników\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n\r\n  const GetList = () => {\r\n    fetch(serwerAdress + \"/users\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setUsers(json);\r\n      });\r\n  };\r\n\r\n  const GetLoggedUser = () => {\r\n    getToken().then((res) => setLoggedUser(res));\r\n  };\r\n\r\n  const GetRoles = () => {\r\n    getToken().then((res) => {\r\n      fetch(serwerAdress + \"/getRoles/\" + \"'\" + res + \"'\")\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          setRoleToken(json[0].Name);\r\n        });\r\n    });\r\n  };\r\n\r\n  const GetUserDetails = (email) => {\r\n    setEmailToken(email);\r\n    navigation.navigate(\"Informacje o Użytkowniku\", { name: \"Informacje\" });\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      GetLoggedUser();\r\n      GetList();\r\n      GetRoles();\r\n    }, [])\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={styles.body}>\r\n      <Text style={styles.loggedUserStyle}>\r\n        Zalogowany jako, {loggedUser ? loggedUser : null}\r\n      </Text>\r\n      <View style={styles.container}>\r\n        <Text style={styles.ARMtitle}>Aplikacja Ratowników Mazowsza</Text>\r\n        <View style={styles.usersList}>\r\n          <FlatList\r\n            showsVerticalScrollIndicator={false}\r\n            showsHorizontalScrollIndicator={false}\r\n            data={Users}\r\n            renderItem={({ item }) => (\r\n              <View>\r\n                {item.State == 1 ? (\r\n                  <TouchableOpacity>\r\n                    <Text\r\n                      style={styles.users}\r\n                      onPress={() => GetUserDetails(item.Email)}\r\n                    >\r\n                      {item.Name} -{\" \"}\r\n                      <Text style={states.available}>Dostępny</Text>\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                ) : item.State == 2 ? (\r\n                  <Text\r\n                    style={styles.users}\r\n                    onPress={() => GetUserDetails(item.Email)}\r\n                  >\r\n                    {item.Name} - {\"\"}\r\n                    <Text style={states.unavailable}>Niedostępny</Text>\r\n                  </Text>\r\n                ) : item.State == 3 ? (\r\n                  <Text\r\n                    style={styles.users}\r\n                    onPress={() => GetUserDetails(item.Email)}\r\n                  >\r\n                    {item.Name} - {\"\"}\r\n                    <Text style={states.busy}>Na akcji</Text>\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={styles.users}>\r\n                    Błąd wczytywania użytkowników\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            )}\r\n            keyExtractor={(item, index) => index.toString()}\r\n          />\r\n        </View>\r\n        <View style={styles.refreshbutton}>\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={GetList}\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>\r\n              Odśwież listę\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={() =>\r\n              navigation.navigate(\"Wydarzenia\", { name: \"Wydarzenia\" })\r\n            }\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>Wydarzenia</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={() =>\r\n              navigation.navigate(\"Mój profil\", { name: \"Mój profil\" })\r\n            }\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>Mój profil</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={navigationStyle.navigationButton}\r\n            onPress={() =>\r\n              navigation.navigate(\"Logowanie\", { name: \"Logowanie\" })\r\n            }\r\n          >\r\n            <Text style={navigationStyle.navigationButtonText}>Wyloguj</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"dodgerblue\",\r\n  },\r\n  container: {\r\n    height: 70 * vh,\r\n  },\r\n  ARMtitle: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    fontSize: 2.5 * vh,\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"5%\",\r\n    marginTop: \"-5%\",\r\n  },\r\n  usersList: {\r\n    height: 40 * vh,\r\n    alignItems: \"center\",\r\n  },\r\n  users: {\r\n    alignItems: \"center\",\r\n    fontSize: 2.3 * vh,\r\n    marginTop: 20,\r\n  },\r\n  refreshbutton: {\r\n    marginTop: \"5%\",\r\n    borderRadius: 5,\r\n  },\r\n  loggedUserStyle: {\r\n    position: \"absolute\",\r\n    top: 20,\r\n    left: 0,\r\n    fontSize: 1.5 * vh,\r\n  },\r\n});\r\n\r\nconst states = StyleSheet.create({\r\n  available: {\r\n    color: \"darkgreen\",\r\n  },\r\n  unavailable: {\r\n    color: \"darkred\",\r\n  },\r\n  busy: {\r\n    color: \"orange\",\r\n  },\r\n});\r\n\r\nconst navigationStyle = StyleSheet.create({\r\n  navigationButton: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 1 * vh,\r\n    backgroundColor: \"#0064C8\",\r\n    marginTop: 10,\r\n    borderRadius: 5,\r\n  },\r\n  navigationButtonText: {\r\n    alignItems: \"center\",\r\n    fontSize: 2 * vh,\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}