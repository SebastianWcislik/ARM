{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nvar RNSmtpMailer = NativeModules.RNSmtpMailer;\n\nvar SmtpMailer = function () {\n  function SmtpMailer() {\n    _classCallCheck(this, SmtpMailer);\n  }\n\n  _createClass(SmtpMailer, null, [{\n    key: \"sendMail\",\n    value: function sendMail(options) {\n      return RNSmtpMailer.sendMail(options);\n    }\n  }]);\n\n  return SmtpMailer;\n}();\n\nexport default SmtpMailer;","map":{"version":3,"sources":["F:/VSCodeProjects/ARM/node_modules/react-native-smtp-mailer/index.ts"],"names":["RNSmtpMailer","NativeModules","SmtpMailer","options","sendMail"],"mappings":";;;IAGQA,Y,GAAiBC,a,CAAjBD,Y;;IAkFFE,U;;;;;;;6BACqBC,O,EAAuC;AAC1D,aAAOH,YAAY,CAACI,QAAb,CAAsBD,OAAtB,CAAP;AACH;;;;;;AAGL,eAAeD,UAAf","sourcesContent":["\nimport { NativeModules } from 'react-native';\n\nconst { RNSmtpMailer } = NativeModules;\n\nexport interface SmtpOptions {\n    /**\n     * The smtp provider host. i.e: \"smtp.gmail.com\"\n     */\n    mailhost: string;\n\n    /**\n     * The port that the smtp provider listens to, i.e: \"465\"\n     */\n    port: string;\n\n    /**\n     * The username to authenticate with stmp host, i.e: \"foo@foobar.com\"\n     */\n    username: string;\n\n    /**\n     * The password to authenticate with stmp host\n     */\n    password: string;\n\n    /**\n     * Comma separated values if want to add multiple recipients\n     * i.e: \"foo@bar.com,bar@foo.com\"\n     */ \n    recipients: string; \n    \n    /**\n     * The subject of the email\n     */\n    subject: string;\n\n    /**\n     * The body of the email.\n     * i.e:\n     * <h1>Sample Header</h1><p>Lorem ipsum dolor sit amet...</p>\n     */\n    htmlBody: string;\n\n    /**\n     * Alias of the username email address, to be shown in the recipients as the sender's name.\n     * By default it's the same as the username field\n     * i.e: \"foo.alias@foobar.com\"\n     * *Note:* This is different than the reply-to email address. If reply-to is not specified, the reply-to will still use the username email\n     */\n    fromName?: string;\n\n    /**\n     * If not specified, the reply-to email is the username one\n     * i.e: \"fooReply@foobar.com\"\n     */\n    replyTo?: string;\n\n    /**\n     * In iOS TLS/SSL is determined automatically, so either true or false, it doesn't affect it\n     * \n     * By default it is true in android. If false then TLS is enabled.\n     */ \n    ssl?: boolean;\n\n    /**\n     * Optional list of bcc emails\n     * i.e: [\"foo@bar.com\", \"bar@foo.com\"]\n     */\n    bcc?: Array<string>;\n\n    /**\n     * Optional path URIs of files that exist to the filesystem in the specified path, and want to be send as attachments\n     * i.e: [RNFS.DocumentDirectoryPath + \"/sample_test.txt\"]\n     */\n    attachmentPaths?: Array<string>;\n\n    /**\n     * **Required if attachmentPaths are set, Only for android**\n     * The sending attachments filenames, will be renamed by these. It's important to set these, otherwise they are not always shown in the received email\n     * i.e: [\"renamed_sample_test.txt\"] or [\"sample_test.txt\"] etc\n     */\n    attachmentNames?: Array<string>;\n}\n\nclass SmtpMailer {\n    public static sendMail(options: SmtpOptions): Promise<string> {\n        return RNSmtpMailer.sendMail(options);\n    }\n}\n\nexport default SmtpMailer;\n"]},"metadata":{},"sourceType":"module"}