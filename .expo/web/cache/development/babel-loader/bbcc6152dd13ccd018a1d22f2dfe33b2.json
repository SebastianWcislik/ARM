{"ast":null,"code":"export function dateToUnix(d) {\n  return Math.round(d.getTime() / 1000);\n}\nexport function addMonths(date, count) {\n  var dt = new Date(date.getFullYear(), date.getMonth(), 0);\n  return new Date(dt.setMonth(dt.getMonth() + count));\n}\nexport function getDaysInMonth(_ref) {\n  var year = _ref.year,\n      month = _ref.month;\n  return [31, isLeapYear({\n    year: year\n  }) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n}\nexport function getFirstDayOfMonth(_ref2) {\n  var year = _ref2.year,\n      month = _ref2.month;\n  return new Date(year, month, 1).getDay();\n}\nexport function getLastDayOfMonth(_ref3) {\n  var year = _ref3.year,\n      month = _ref3.month;\n  return new Date(year, month, getDaysInMonth({\n    year: year,\n    month: month\n  })).getDay();\n}\nexport function areDatesOnSameDay(a, b) {\n  if (!b) {\n    return false;\n  }\n\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\nexport function isDateBetween(date, _ref4) {\n  var startDate = _ref4.startDate,\n      endDate = _ref4.endDate;\n\n  if (!startDate || !endDate) {\n    return false;\n  }\n\n  if (date <= endDate && date >= startDate) {\n    return true;\n  }\n\n  return false;\n}\nexport function isLeapYear(_ref5) {\n  var year = _ref5.year;\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport var daySize = 46;\nexport var startAtIndex = 1000;\nexport var totalMonths = startAtIndex * 2;\nexport var allMonthsArray = new Array(totalMonths);\nexport var gridCounts = allMonthsArray.fill(null).map(function (_, index) {\n  var monthDate = addMonths(new Date(), getRealIndex(index));\n  return getGridCountForDate(monthDate);\n});\nexport function getGridCountForDate(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth();\n  var daysInMonth = getDaysInMonth({\n    year: year,\n    month: month\n  });\n  var dayOfWeek = getFirstDayOfMonth({\n    year: year,\n    month: month\n  });\n  return Math.ceil((daysInMonth + dayOfWeek) / 7);\n}\nexport function getRealIndex(index) {\n  return index - startAtIndex;\n}","map":{"version":3,"sources":["dateUtils.tsx"],"names":["Math","d","dt","date","month","year","getDaysInMonth","a","b","endDate","daySize","startAtIndex","totalMonths","allMonthsArray","gridCounts","monthDate","addMonths","getRealIndex","getGridCountForDate","daysInMonth","dayOfWeek","getFirstDayOfMonth","index"],"mappings":"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","sourcesContent":["export function dateToUnix(d: Date): number {\n  return Math.round(d.getTime() / 1000);\n}\n\nexport function addMonths(date: Date, count: number) {\n  const dt = new Date(date.getFullYear(), date.getMonth(), 0);\n  return new Date(dt.setMonth(dt.getMonth() + count));\n}\n\n// https://stackoverflow.com/a/1185068/2508481\n// pass in any date as parameter anyDateInMonth based on dayjs\nexport function getDaysInMonth({\n  year,\n  month,\n}: {\n  year: number;\n  month: number;\n}): number {\n  return [\n    31,\n    isLeapYear({ year }) ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ][month];\n}\n\nexport function getFirstDayOfMonth({\n  year,\n  month,\n}: {\n  year: number;\n  month: number;\n}): number {\n  return new Date(year, month, 1).getDay();\n}\n\nexport function getLastDayOfMonth({\n  year,\n  month,\n}: {\n  year: number;\n  month: number;\n}): number {\n  return new Date(year, month, getDaysInMonth({ year, month })).getDay();\n}\n\nexport function areDatesOnSameDay(a: Date, b?: Date | null | undefined) {\n  if (!b) {\n    return false;\n  }\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  );\n}\n\nexport function isDateBetween(\n  date: Date,\n  {\n    startDate,\n    endDate,\n  }: {\n    startDate?: Date | null | undefined;\n    endDate?: Date | null | undefined;\n  }\n): boolean {\n  if (!startDate || !endDate) {\n    return false;\n  }\n  if (date <= endDate && date >= startDate) {\n    return true;\n  }\n  return false;\n}\n\nexport function isLeapYear({ year }: { year: number }) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\nexport const daySize = 46;\n\nexport const startAtIndex = 1000;\nexport const totalMonths = startAtIndex * 2;\nexport const allMonthsArray = new Array(totalMonths);\nexport const gridCounts = allMonthsArray.fill(null).map((_, index) => {\n  const monthDate = addMonths(new Date(), getRealIndex(index));\n  return getGridCountForDate(monthDate);\n});\n\nexport function getGridCountForDate(date: Date) {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const daysInMonth = getDaysInMonth({ year, month });\n  const dayOfWeek = getFirstDayOfMonth({ year, month });\n  return Math.ceil((daysInMonth + dayOfWeek) / 7);\n}\n\nexport function getRealIndex(index: number) {\n  return index - startAtIndex;\n}\n"]},"metadata":{},"sourceType":"module"}