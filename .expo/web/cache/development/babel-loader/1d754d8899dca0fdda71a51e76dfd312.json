{"ast":null,"code":"var _jsxFileName = \"F:\\\\VSCode Projects\\\\DoneWithIt\\\\App.js\",\n    _this = this;\n\nimport { StatusBar } from \"expo-status-bar\";\nimport mysql from \"mysql\";\nimport express from \"express\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function App() {\n  return React.createElement(SafeAreaView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Aplikacja Ratownik\\xF3w Mazowsza\"), React.createElement(FlatListBasics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Test\",\n    onPress: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar FlatListBasics = function FlatListBasics() {\n  return React.createElement(View, {\n    style: styles.usersList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: [{\n      key: \"Jan\",\n      isAvailable: true\n    }, {\n      key: \"Daniel\",\n      isAvailable: false\n    }, {\n      key: \"Dominik\",\n      isAvailable: true\n    }, {\n      key: \"Jerzy\",\n      isAvailable: false\n    }, {\n      key: \"Adam\",\n      isAvailable: true\n    }],\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, item.isAvailable == true ? React.createElement(Text, {\n        style: styles.users,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, item.key, \" - \", React.createElement(Text, {\n        style: styles.available,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 30\n        }\n      }, \"Dost\\u0119pny\")) : React.createElement(Text, {\n        style: styles.users,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, item.key, \" - \", React.createElement(Text, {\n        style: styles.unavailable,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 30\n        }\n      }, \"Niedost\\u0119pny\")));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar connection = mysql.createPool({\n  host: \"localhost:3308\",\n  user: \"admin\",\n  password: \"asdasdasd\",\n  database: \"sys\"\n});\napp.listen(3000, function () {\n  console.log(\"Go to http://localhost:3308/users so you can see the data.\");\n});\n\nfunction test() {\n  fetch(\"http://localhost:3308/users\").then(function (response) {\n    return response.json();\n  }).then(function (users) {\n    return console.warn(users);\n  });\n}\n\nvar styles = StyleSheet.create({\n  body: {\n    height: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\"\n  },\n  container: {\n    alignItems: \"center\",\n    height: \"80%\"\n  },\n  title: {\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    marginBottom: \"5%\",\n    marginTop: \"5%\"\n  },\n  usersList: {\n    marginTop: \"5%\",\n    marginBottom: \"2,5%\"\n  },\n  users: {\n    fontSize: \"18px\",\n    marginTop: \"5%\"\n  },\n  available: {\n    color: \"darkgreen\"\n  },\n  unavailable: {\n    color: \"darkred\"\n  }\n});","map":{"version":3,"sources":["F:/VSCode Projects/DoneWithIt/App.js"],"names":["StatusBar","mysql","express","React","App","styles","body","container","title","test","FlatListBasics","usersList","key","isAvailable","item","users","available","unavailable","connection","createPool","host","user","password","database","app","listen","console","log","fetch","then","response","json","warn","StyleSheet","create","height","flexDirection","alignItems","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","marginTop","color"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport mysql from \"mysql\";\nimport express from \"express\";\nimport React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  FlatList,\n  Button,\n} from \"react-native\";\n\n// APP\n\nexport default function App() {\n  return (\n    <SafeAreaView style={styles.body}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Aplikacja Ratowników Mazowsza</Text>\n        <FlatListBasics></FlatListBasics>\n        <Button title=\"Test\" onPress={test} />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst FlatListBasics = () => {\n  return (\n    <View style={styles.usersList}>\n      <FlatList\n        data={[\n          { key: \"Jan\", isAvailable: true },\n          { key: \"Daniel\", isAvailable: false },\n          { key: \"Dominik\", isAvailable: true },\n          { key: \"Jerzy\", isAvailable: false },\n          { key: \"Adam\", isAvailable: true },\n        ]}\n        renderItem={({ item }) => (\n          <View>\n            {item.isAvailable == true ? (\n              <Text style={styles.users}>\n                {item.key} - <Text style={styles.available}>Dostępny</Text>\n              </Text>\n            ) : (\n              <Text style={styles.users}>\n                {item.key} - <Text style={styles.unavailable}>Niedostępny</Text>\n              </Text>\n            )}\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nconst connection = mysql.createPool({\n  host: \"localhost:3308\", // Your connection adress (localhost).\n  user: \"admin\", // Your database's username.\n  password: \"asdasdasd\", // Your database's password.\n  database: \"sys\", // Your database's name.\n});\n\n// Starting our app.\n//const app = express();\n\n// Creating a GET route that returns data from the 'users' table.\n// app.get(\"/users\", function (req, res) {\n//   // Connecting to the database.\n//   connection.getConnection(function (err, connection) {\n//     // Executing the MySQL query (select all data from the 'users' table).\n//     connection.query(\"SELECT * FROM users\", function (error, results, fields) {\n//       // If some error occurs, we throw an error.\n//       if (error) throw error;\n\n//       // Getting the 'response' from the database and sending it to our route. This is were the data is.\n//       res.send(results);\n//     });\n//   });\n// });\n\n// Starting our server.\napp.listen(3000, () => {\n  console.log(\"Go to http://localhost:3308/users so you can see the data.\");\n});\n\nfunction test() {\n  fetch(\"http://localhost:3308/users\")\n    .then((response) => response.json())\n    .then((users) => console.warn(users));\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    height: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\",\n  },\n  container: {\n    alignItems: \"center\",\n    height: \"80%\",\n  },\n  title: {\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    marginBottom: \"5%\",\n    marginTop: \"5%\",\n  },\n  usersList: {\n    marginTop: \"5%\",\n    marginBottom: \"2,5%\",\n  },\n  users: {\n    fontSize: \"18px\",\n    marginTop: \"5%\",\n  },\n  available: {\n    color: \"darkgreen\",\n  },\n  unavailable: {\n    color: \"darkred\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}